<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>874</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'what()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::exception::what</FUNCTION>
    <DECORATED>?what@exception@detail@nlohmann@@UBEPBDXZ</DECORATED>
    <FUNCLINE>872</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>881</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26434</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::exception::exception' hides a non-virtual function 'std::exception::exception' (c.128).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::exception::{ctor}</FUNCTION>
    <DECORATED>??0exception@detail@nlohmann@@IAE@HPBD@Z</DECORATED>
    <FUNCLINE>881</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::&lt;</FUNCTION>
    <DECORATED>??Mdetail@nlohmann@@YA_NW4value_t@01@0@Z</DECORATED>
    <FUNCLINE>1237</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::&lt;</FUNCTION>
    <DECORATED>??Mdetail@nlohmann@@YA_NW4value_t@01@0@Z</DECORATED>
    <FUNCLINE>1237</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::&lt;</FUNCTION>
    <DECORATED>??Mdetail@nlohmann@@YA_NW4value_t@01@0@Z</DECORATED>
    <FUNCLINE>1237</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::&lt;</FUNCTION>
    <DECORATED>??Mdetail@nlohmann@@YA_NW4value_t@01@0@Z</DECORATED>
    <FUNCLINE>1237</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2184</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'struct nlohmann::detail::input_adapter_protocol', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter_protocol::{dtor}</FUNCTION>
    <DECORATED>??1input_adapter_protocol@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2184</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2223</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_stream_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2223</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2227</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'rdstate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_stream_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2223</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2227</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'clear()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_stream_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2223</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2245</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'res' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::get_character</FUNCTION>
    <DECORATED>?get_character@input_stream_adapter@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2243</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2265</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::{ctor}</FUNCTION>
    <DECORATED>??0input_buffer_adapter@detail@nlohmann@@QAE@PBDI@Z</DECORATED>
    <FUNCLINE>2264</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2279</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(this-&gt;cursor++)'. '(*this).nlohmann::detail::input_buffer_adapter::cursor' may have been invalidated at line 2279 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::get_character</FUNCTION>
    <DECORATED>?get_character@input_buffer_adapter@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2275</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>2279</LINE>
        <COLUMN>54</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2279</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::get_character</FUNCTION>
    <DECORATED>?get_character@input_buffer_adapter@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2275</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2273</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_buffer_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2273</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2552</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::input_adapter::operator std::shared_ptr&lt;nlohmann::detail::input_adapter_protocol&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::operator class std::shared_ptr&lt;struct nlohmann::detail::input_adapter_protocol&gt;</FUNCTION>
    <DECORATED>??Binput_adapter@detail@nlohmann@@QAE?AV?$shared_ptr@Uinput_adapter_protocol@detail@nlohmann@@@std@@XZ</DECORATED>
    <FUNCLINE>2552</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10270</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent</FUNCTION>
    <DECORATED>?get_cached_power_for_binary_exponent@dtoa_impl@detail@nlohmann@@YA?AUcached_power@123@H@Z</DECORATED>
    <FUNCLINE>10117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10117</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent</FUNCTION>
    <DECORATED>?get_cached_power_for_binary_exponent@dtoa_impl@detail@nlohmann@@YA?AUcached_power@123@H@Z</DECORATED>
    <FUNCLINE>10117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10270</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent</FUNCTION>
    <DECORATED>?get_cached_power_for_binary_exponent@dtoa_impl@detail@nlohmann@@YA?AUcached_power@123@H@Z</DECORATED>
    <FUNCLINE>10117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10281</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::find_largest_pow10' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::find_largest_pow10</FUNCTION>
    <DECORATED>?find_largest_pow10@dtoa_impl@detail@nlohmann@@YAHIAAI@Z</DECORATED>
    <FUNCLINE>10281</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10337</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_round</FUNCTION>
    <DECORATED>?grisu2_round@dtoa_impl@detail@nlohmann@@YAXPADH_K111@Z</DECORATED>
    <FUNCLINE>10337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10337</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::grisu2_round' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_round</FUNCTION>
    <DECORATED>?grisu2_round@dtoa_impl@detail@nlohmann@@YAXPADH_K111@Z</DECORATED>
    <FUNCLINE>10337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10369</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_round</FUNCTION>
    <DECORATED>?grisu2_round@dtoa_impl@detail@nlohmann@@YAXPADH_K111@Z</DECORATED>
    <FUNCLINE>10337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10378</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buffer' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10411</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10455</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10474</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10490</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10562</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10455</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10562</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10715</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10730</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10740</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10742</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10746</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10748</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10750</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10715</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::append_exponent' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10727</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10727 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10727</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10723</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10723 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10723</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10735</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10735 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10735</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10746</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10746 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10746</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10740</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10740 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10740</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10736 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10736</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10748</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10748 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10748</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10742</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10742 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10742</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10750</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10750 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10750</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10715's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10736</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10742</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10750</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10753</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10723</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10727</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10735</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10740</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10742</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10746</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10748</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10750</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10765</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10783</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10797</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10807</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10810</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10826</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10831</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10831 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10831</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10832</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'buf' in call to 'nlohmann::detail::dtoa_impl::append_exponent' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10831</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10831</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10765's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10831</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10832</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10783</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10785</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10786</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10787</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10797</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10797</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10798</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10799</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10807</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10808</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10809</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10810</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10811</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10819</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10826</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10826</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10827</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10828</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10831</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>20340</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'swap()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>std::swap</FUNCTION>
    <DECORATED>??$swap@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@X@std@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@0@Z</DECORATED>
    <FUNCLINE>20335</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>7</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Ver''</FUNCTION>
    <DECORATED>??__EDice_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>8</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Short_Ver''</FUNCTION>
    <DECORATED>??__EDice_Short_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Head_Ver''</FUNCTION>
    <DECORATED>??__EDice_Head_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Head_Ver''</FUNCTION>
    <DECORATED>??__EDice_Head_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>10</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Full_Ver''</FUNCTION>
    <DECORATED>??__EDice_Full_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Bot_Ver''</FUNCTION>
    <DECORATED>??__EDice_Bot_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>46</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'SkillNameReplace''</FUNCTION>
    <DECORATED>??__ESkillNameReplace@@YAXXZ</DECORATED>
    <FUNCLINE>102</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>105</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,int&gt; &gt; &gt;::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,int&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'SkillDefaultVal''</FUNCTION>
    <DECORATED>??__ESkillDefaultVal@@YAXXZ</DECORATED>
    <FUNCLINE>202</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>206</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>207</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>208</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>209</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>210</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>211</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>212</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>214</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>215</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>216</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>221</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>223</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>224</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>225</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>226</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>227</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>228</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>229</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>230</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>236</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>237</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>238</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>239</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>240</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>241</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>242</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>243</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>244</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>245</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>246</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>247</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>248</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>249</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>250</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>251</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>252</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>253</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>256</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>257</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>258</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>259</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>260</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>261</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>262</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>263</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>264</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>265</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>266</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>267</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>268</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>269</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>270</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>271</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>272</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>273</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>274</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>275</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>279</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>280</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>281</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>282</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>283</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>284</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>285</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>286</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>287</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>288</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>289</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>290</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>291</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>292</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>293</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>296</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>297</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>299</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>300</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>301</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>302</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>303</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>304</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>306</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>307</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>308</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>309</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>310</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>311</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>313</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>314</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>315</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>316</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>317</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>318</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>319</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>320</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>321</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>322</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>323</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>324</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>325</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>326</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>327</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>328</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>329</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>330</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>331</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>332</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>333</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>334</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>335</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>336</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>337</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>339</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>340</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>341</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>342</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>343</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>344</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>345</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>346</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>347</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>348</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>349</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>350</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>351</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>352</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>353</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>354</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>355</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>356</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>357</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>358</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>359</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>361</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>362</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>363</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>364</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>365</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>366</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>367</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>368</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>369</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>370</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>371</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>372</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>373</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>374</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>375</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>376</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>377</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>378</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>379</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>380</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>381</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>382</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>383</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>384</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>385</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>386</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>387</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>388</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>389</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>390</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>391</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>392</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>393</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>394</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>395</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>396</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>397</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>398</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>399</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>400</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>401</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>402</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>403</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>404</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>405</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>406</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>407</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>408</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>409</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>410</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>412</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>413</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>414</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>415</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>416</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>417</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>418</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>419</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>420</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>421</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>422</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>423</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>424</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>425</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>426</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>427</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>428</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>429</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>430</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>431</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>432</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>433</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>434</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>437</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>438</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>439</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>445</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>446</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>447</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>448</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>449</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>450</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>453</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>454</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>455</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>458</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>459</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>460</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>461</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>462</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>463</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>464</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>465</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>466</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>467</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>468</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>469</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>470</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>471</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>473</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>474</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>475</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>476</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>477</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>478</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>479</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>480</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>481</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>482</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>483</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>484</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>485</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>486</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>487</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>488</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>489</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>490</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>custommsg.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26460</DEFECTCODE>
    <DESCRIPTION>The reference argument 'in' for function 'ReadCustomMsg' can be marked as const (con.3).</DESCRIPTION>
    <FUNCTION>ReadCustomMsg</FUNCTION>
    <DECORATED>?ReadCustomMsg@@YAXAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>5886</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::operator++' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::++</FUNCTION>
    <DECORATED>??E?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAEAAV012@XZ</DECORATED>
    <FUNCLINE>5886</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11744</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::json_pointer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$json_pointer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@nlohmann@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>11744</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2421</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'fill_buffer&lt;4&gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2421</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'fill_buffer&lt;2&gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2421</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'fill_buffer&lt;2&gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>17751</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::swap</FUNCTION>
    <DECORATED>?swap@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXAAV12@@Z</DECORATED>
    <FUNCLINE>17743</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>17751</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::swap</FUNCTION>
    <DECORATED>?swap@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXAAV12@@Z</DECORATED>
    <FUNCLINE>17743</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14352</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::dump</FUNCTION>
    <DECORATED>?dump@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD_NW4error_handler_t@detail@2@@Z</DECORATED>
    <FUNCLINE>14342</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13375</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14287</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@XZ</DECORATED>
    <FUNCLINE>14284</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14284</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@XZ</DECORATED>
    <FUNCLINE>14284</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13375</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13398</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'destroy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13399</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13390</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'destroy&lt;std::vector&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;,std::allocator&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt; &gt; &gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13391</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13382</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'a()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13383</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>5787</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_object-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::set_end</FUNCTION>
    <DECORATED>?set_end@?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXXZ</DECORATED>
    <FUNCLINE>5773</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>5750</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_object-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::set_begin</FUNCTION>
    <DECORATED>?set_begin@?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXXZ</DECORATED>
    <FUNCLINE>5736</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>5715</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class nlohmann::detail::iter_impl&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt; &gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE@ABV012@@Z</DECORATED>
    <FUNCLINE>5715</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11148</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'val-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump</FUNCTION>
    <DECORATED>?dump@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAEXABV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@3@_N1II@Z</DECORATED>
    <FUNCLINE>10974</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4990</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26416</DEFECTCODE>
    <DESCRIPTION>Shared pointer parameter 'adapter' is passed by rvalue reference. Pass by value instead (r.34).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE@$$QAV?$shared_ptr@Uinput_adapter_protocol@detail@nlohmann@@@std@@V?$function@$$A6A_NHW4parse_event_t@?$parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@4@@Z@4@_N@Z</DECORATED>
    <FUNCLINE>4990</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>12195</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::json_pointer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::split</FUNCTION>
    <DECORATED>?split@?$json_pointer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@nlohmann@@CA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z</DECORATED>
    <FUNCLINE>12184</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>12230</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::json_pointer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::split</FUNCTION>
    <DECORATED>?split@?$json_pointer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@nlohmann@@CA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z</DECORATED>
    <FUNCLINE>12184</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>12230</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::json_pointer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::split</FUNCTION>
    <DECORATED>?split@?$json_pointer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@nlohmann@@CA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z</DECORATED>
    <FUNCLINE>12184</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>6436</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::output_adapter&lt;char,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::operator std::shared_ptr&lt;nlohmann::detail::output_adapter_protocol&lt;char&gt; &gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::output_adapter&lt;char,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::operator class std::shared_ptr&lt;struct nlohmann::detail::output_adapter_protocol&lt;char&gt; &gt;</FUNCTION>
    <DECORATED>??B?$output_adapter@DV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@nlohmann@@QAE?AV?$shared_ptr@U?$output_adapter_protocol@D@detail@nlohmann@@@std@@XZ</DECORATED>
    <FUNCLINE>6436</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14216</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;other-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@$$QAV01@@Z</DECORATED>
    <FUNCLINE>14214</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14216</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'other-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@$$QAV01@@Z</DECORATED>
    <FUNCLINE>14214</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13563</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'adl_serializer&gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@$$T@Z</DECORATED>
    <FUNCLINE>13562</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3930</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_token_string</FUNCTION>
    <DECORATED>?get_token_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3920</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3930</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cs': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_token_string</FUNCTION>
    <DECORATED>?get_token_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3920</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3931</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cs': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_token_string</FUNCTION>
    <DECORATED>?get_token_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3920</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2670</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26416</DEFECTCODE>
    <DESCRIPTION>Shared pointer parameter 'adapter' is passed by rvalue reference. Pass by value instead (r.34).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE@$$QAV?$shared_ptr@Uinput_adapter_protocol@detail@nlohmann@@@std@@@Z</DECORATED>
    <FUNCLINE>2670</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11183</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'codepoint' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11258</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11264</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11264</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11193</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11327</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11328</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11329</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11330</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11331</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11332</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11336</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11337</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11338</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11302</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11245</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11246</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11238</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11239</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11231</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11232</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11224</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11225</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11217</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11218</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11210</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11211</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11203</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11204</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11274</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11274</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11358</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11358</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11383</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11327</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11328</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11329</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11330</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11331</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11332</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11336</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11337</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11338</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11245</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11246</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11238</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11239</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11231</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11232</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11224</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11225</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11217</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11218</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11210</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11211</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11203</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11204</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11258</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11264</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11274</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11358</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14263</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::=</FUNCTION>
    <DECORATED>??4?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEAAV01@V01@@Z</DECORATED>
    <FUNCLINE>14251</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14263</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::=</FUNCTION>
    <DECORATED>??4?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEAAV01@V01@@Z</DECORATED>
    <FUNCLINE>14251</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14266</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'allotemp.2'. '(temporary 2)' may have been invalidated at line 14266 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::=</FUNCTION>
    <DECORATED>??4?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEAAV01@V01@@Z</DECORATED>
    <FUNCLINE>14251</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>14266</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14266</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(14251's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::=</FUNCTION>
    <DECORATED>??4?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEAAV01@V01@@Z</DECORATED>
    <FUNCLINE>14251</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>14266</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13275</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13539</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@1@@Z</DECORATED>
    <FUNCLINE>13538</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13275</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13317</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13311</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13305</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13299</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2688</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'loc' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_decimal_point</FUNCTION>
    <DECORATED>?get_decimal_point@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CADXZ</DECORATED>
    <FUNCLINE>2686</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2688</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'loc' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_decimal_point</FUNCTION>
    <DECORATED>?get_decimal_point@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CADXZ</DECORATED>
    <FUNCLINE>2686</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11588</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>表达式“0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=400-1”对此调用无效。</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11568</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11588</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11588</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11594</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11588</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11594</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11491</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'end' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_float</FUNCTION>
    <DECORATED>?dump_float@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXNU?$integral_constant@_N$00@std@@@Z</DECORATED>
    <FUNCLINE>11488</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11493</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_float</FUNCTION>
    <DECORATED>?dump_float@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXNU?$integral_constant@_N$00@std@@@Z</DECORATED>
    <FUNCLINE>11488</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11491</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_float</FUNCTION>
    <DECORATED>?dump_float@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXNU?$integral_constant@_N$00@std@@@Z</DECORATED>
    <FUNCLINE>11488</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3772</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'literal_text' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_literal</FUNCTION>
    <DECORATED>?scan_literal@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@PBDIW44123@@Z</DECORATED>
    <FUNCLINE>3772</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3778</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_literal</FUNCTION>
    <DECORATED>?scan_literal@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@PBDIW44123@@Z</DECORATED>
    <FUNCLINE>3772</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3733</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3749</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3473</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3459</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3453</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3507</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3567</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3560</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3554</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3571</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3493</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3531</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3524</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3591</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3624</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3655</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3640</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3682</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3708</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3712</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3617</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3628</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3535</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3796</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'push_back()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::reset</FUNCTION>
    <DECORATED>?reset@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXXZ</DECORATED>
    <FUNCLINE>3792</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2765</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'range' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2768</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(++range)'. 'range' may have been invalidated at line 2768 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>2768</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2768</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*range'. 'range' may have been invalidated at line 2765 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>2765</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2768</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2765</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>表达式“0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=64-1”对此调用无效。</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11429</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11435</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11436</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11438</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11443</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11444</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11445</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11438</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11443</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11444</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11445</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11438</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11448</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11452</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11443</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11443</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_K$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_K@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_K$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_K@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_K$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_K@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_K$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_K@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_K$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_K@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_K$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_K@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13209</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'deleter' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@$$V@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@XZ</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(13204's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@$$V@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@XZ</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>13216</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13209</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'deleter' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@$$V@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@XZ</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(13204's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@$$V@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@XZ</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>13216</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13209</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'deleter' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAY00$$CBD@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAY00$$CBD@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(13204's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAY00$$CBD@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAY00$$CBD@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>13216</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10848</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'first' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10862</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10862 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10862</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10857</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10857 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10864</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10864 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10864</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10865</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10865 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10865</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10877</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'first' in call to 'nlohmann::detail::dtoa_impl::grisu2&lt;double&gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10890</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'first' in call to 'nlohmann::detail::dtoa_impl::format_buffer' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10865</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10848's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10865</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10866</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10857</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10848's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10890</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10857</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10862</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10864</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10865</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2357</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2363</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2368</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2373</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2374</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2379</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2380</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2381</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2388</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2390</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2391</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2392</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2393</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2400</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2357</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2363</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2368</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2373</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2374</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2379</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2380</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2381</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2388</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2390</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2391</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2392</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2393</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2400</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char16_t,std::char_traits&lt;char16_t&gt;,std::allocator&lt;char16_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2302</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2308</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2313</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2318</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2319</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2324</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2325</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2326</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2331</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2332</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2333</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2334</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2340</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4711</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::end_array</FUNCTION>
    <DECORATED>?end_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NXZ</DECORATED>
    <FUNCLINE>4705</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4729</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::end_array</FUNCTION>
    <DECORATED>?end_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NXZ</DECORATED>
    <FUNCLINE>4705</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4686</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_array</FUNCTION>
    <DECORATED>?start_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4690</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'val.second' in call to 'std::vector&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *,std::allocator&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *&gt; &gt;::push_back' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_array</FUNCTION>
    <DECORATED>?start_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4690</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4653</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::end_object</FUNCTION>
    <DECORATED>?end_object@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NXZ</DECORATED>
    <FUNCLINE>4649</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4637</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::key</FUNCTION>
    <DECORATED>?key@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4632</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4643</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::key</FUNCTION>
    <DECORATED>?key@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4632</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4613</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_object</FUNCTION>
    <DECORATED>?start_object@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4610</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4617</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'val.second' in call to 'std::vector&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *,std::allocator&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *&gt; &gt;::push_back' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_object</FUNCTION>
    <DECORATED>?start_object@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4610</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4617</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4450</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::key</FUNCTION>
    <DECORATED>?key@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4447</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3902</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_string' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_string</FUNCTION>
    <DECORATED>?get_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3902</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>16975</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::max_size</FUNCTION>
    <DECORATED>?max_size@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QBEIXZ</DECORATED>
    <FUNCLINE>16962</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@ABV01@@Z</DECORATED>
    <FUNCLINE>14131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@ABV01@@Z</DECORATED>
    <FUNCLINE>14131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13364</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13352</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13340</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13273</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13271</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13269</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13267</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>16911</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::size</FUNCTION>
    <DECORATED>?size@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QBEIXZ</DECORATED>
    <FUNCLINE>16892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2526</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::{ctor}</FUNCTION>
    <DECORATED>??$?0PBD$0A@@input_adapter@detail@nlohmann@@QAE@PBD0@Z</DECORATED>
    <FUNCLINE>2506</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2530</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26473</DEFECTCODE>
    <DESCRIPTION>Don't cast between pointer types where the source type and the target type are the same (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::{ctor}</FUNCTION>
    <DECORATED>??$?0PBD$0A@@input_adapter@detail@nlohmann@@QAE@PBD0@Z</DECORATED>
    <FUNCLINE>2506</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2526</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::{ctor}</FUNCTION>
    <DECORATED>??$?0V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@input_adapter@detail@nlohmann@@QAE@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>2506</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2530</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26473</DEFECTCODE>
    <DESCRIPTION>Don't cast between pointer types where the source type and the target type are the same (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::{ctor}</FUNCTION>
    <DECORATED>??$?0V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@input_adapter@detail@nlohmann@@QAE@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>2506</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@W4value_t@detail@nlohmann@@@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@$$QAW4value_t@12@_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@W4value_t@detail@nlohmann@@@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@$$QAW4value_t@12@_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>16046</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::erase</FUNCTION>
    <DECORATED>??$erase@V?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE?AV?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@1@V231@@Z</DECORATED>
    <FUNCLINE>16002</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AAN@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AAN_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AAN@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AAN_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_K@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AA_K_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_K@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AA_K_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_J@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AA_J_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_J@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AA_J_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_N@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AA_N_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_N@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@AA_N_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@$$T@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@$$QA$$T_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@$$T@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@$$QA$$T_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@W4value_t@detail@nlohmann@@@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@$$QAW4value_t@12@@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AAN@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@AAN@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_K@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@AA_K@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_J@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@AA_J@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@AA_N@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@AA_N@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@$$T@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@$$QA$$T@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13209</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'deleter' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@ABV12@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@ABV23@@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(13204's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@ABV12@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@std@@ABV23@@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>13216</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13209</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'deleter' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@ABV12@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@ABV23@@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(13204's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@ABV12@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@X@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@ABV23@@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>13216</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13209</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'deleter' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(13204's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@@Z</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>13216</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>6347</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'struct nlohmann::detail::output_adapter_protocol&lt;char&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::output_adapter_protocol&lt;char&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$output_adapter_protocol@D@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>6347</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10007</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::compute_boundaries</FUNCTION>
    <DECORATED>??$compute_boundaries@N@dtoa_impl@detail@nlohmann@@YA?AUboundaries@012@N@Z</DECORATED>
    <FUNCLINE>9978</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AANN$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AAN@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AANN$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AAN@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AA_K_K$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AA_K@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AA_K_K$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AA_K@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AA_J_J$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AA_J@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AA_J_J$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AA_J@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AA_N_N$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AA_N@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0AA_N_N$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@AA_N@Z</DECORATED>
    <FUNCLINE>13629</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>9837</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::reinterpret_bits&lt;unsigned __int64,double&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::reinterpret_bits</FUNCTION>
    <DECORATED>??$reinterpret_bits@_KN@dtoa_impl@detail@nlohmann@@YA_KN@Z</DECORATED>
    <FUNCLINE>9837</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14785</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::get_impl_ptr</FUNCTION>
    <DECORATED>?get_impl_ptr@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@ABEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBV34@@Z</DECORATED>
    <FUNCLINE>14783</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2023</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_json</FUNCTION>
    <DECORATED>??$to_json@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@_K$0A@@detail@nlohmann@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@1@_K@Z</DECORATED>
    <FUNCLINE>2021</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2030</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_json</FUNCTION>
    <DECORATED>??$to_json@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@_J$0A@@detail@nlohmann@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@1@_J@Z</DECORATED>
    <FUNCLINE>2028</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1841</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;3&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$02@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>1838</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1841</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;3&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$02@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>1838</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1871</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;7&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$06@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@N@Z</DECORATED>
    <FUNCLINE>1868</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1871</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;7&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$06@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@N@Z</DECORATED>
    <FUNCLINE>1868</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1883</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;6&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$05@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_K@Z</DECORATED>
    <FUNCLINE>1880</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1883</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;6&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$05@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_K@Z</DECORATED>
    <FUNCLINE>1880</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1895</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;5&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$04@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_J@Z</DECORATED>
    <FUNCLINE>1892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1895</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;5&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$04@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_J@Z</DECORATED>
    <FUNCLINE>1892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1829</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;4&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$03@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_N@Z</DECORATED>
    <FUNCLINE>1826</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1829</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;4&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$03@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_N@Z</DECORATED>
    <FUNCLINE>1826</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>