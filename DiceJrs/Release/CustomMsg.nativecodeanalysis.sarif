{
  "version": "2.0.0",
  "$schema": "http://json.schemastore.org/sarif-2.0.0",
  "runs": [
    {
      "results": [
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'what()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 16,
                  "endLine": 874,
                  "endColumn": 22
                }
              },
              "fullyQualifiedLogicalName": "public: virtual char const * __thiscall nlohmann::detail::exception::what(void)const "
            }
          ]
        },
        {
          "ruleId": "26434",
          "message": {
            "text": "Function 'nlohmann::detail::exception::exception' hides a non-virtual function 'std::exception::exception' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 881,
                  "startColumn": 5,
                  "endLine": 881,
                  "endColumn": 5
                }
              },
              "fullyQualifiedLogicalName": "protected: __thiscall nlohmann::detail::exception::exception(int,char const *)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 66,
                  "endLine": 1247,
                  "endColumn": 96
                }
              },
              "fullyQualifiedLogicalName": "bool __cdecl nlohmann::detail::operator<(enum nlohmann::detail::value_t,enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 66,
                  "endLine": 1247,
                  "endColumn": 96
                }
              },
              "fullyQualifiedLogicalName": "bool __cdecl nlohmann::detail::operator<(enum nlohmann::detail::value_t,enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 66,
                  "endLine": 1247,
                  "endColumn": 79
                }
              },
              "fullyQualifiedLogicalName": "bool __cdecl nlohmann::detail::operator<(enum nlohmann::detail::value_t,enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 83,
                  "endLine": 1247,
                  "endColumn": 96
                }
              },
              "fullyQualifiedLogicalName": "bool __cdecl nlohmann::detail::operator<(enum nlohmann::detail::value_t,enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'struct nlohmann::detail::input_adapter_protocol', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2184,
                  "startColumn": 14,
                  "endLine": 2184,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "public: virtual __thiscall nlohmann::detail::input_adapter_protocol::~input_adapter_protocol(void)"
            }
          ]
        },
        {
          "ruleId": "26443",
          "message": {
            "text": "Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2223,
                  "startColumn": 6,
                  "endLine": 2223,
                  "endColumn": 6
                }
              },
              "fullyQualifiedLogicalName": "public: virtual __thiscall nlohmann::detail::input_stream_adapter::~input_stream_adapter(void)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'rdstate()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2227,
                  "startColumn": 18,
                  "endLine": 2227,
                  "endColumn": 28
                }
              },
              "fullyQualifiedLogicalName": "public: virtual __thiscall nlohmann::detail::input_stream_adapter::~input_stream_adapter(void)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'clear()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2227,
                  "startColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "public: virtual __thiscall nlohmann::detail::input_stream_adapter::~input_stream_adapter(void)"
            }
          ]
        },
        {
          "ruleId": "26496",
          "message": {
            "text": "The variable 'res' is assigned only once, mark it as const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2245,
                  "startColumn": 14,
                  "endLine": 2245,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::input_stream_adapter::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2265,
                  "startColumn": 27,
                  "endLine": 2265,
                  "endColumn": 32
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::input_buffer_adapter::input_buffer_adapter(char const *,unsigned int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2279,
                  "startColumn": 44,
                  "endLine": 2279,
                  "endColumn": 64
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::input_buffer_adapter::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(this->cursor++)'. '(*this).nlohmann::detail::input_buffer_adapter::cursor' may have been invalidated at line 2279 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2279,
                  "startColumn": 44,
                  "endLine": 2279,
                  "endColumn": 64
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::input_buffer_adapter::get_character(void)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 2279,
                            "startColumn": 55
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26443",
          "message": {
            "text": "Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2273,
                  "startColumn": 6,
                  "endLine": 2273,
                  "endColumn": 6
                }
              },
              "fullyQualifiedLogicalName": "public: virtual __thiscall nlohmann::detail::input_buffer_adapter::~input_buffer_adapter(void)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::input_adapter::operator std::shared_ptr<nlohmann::detail::input_adapter_protocol>' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2552,
                  "startColumn": 5,
                  "endLine": 2552,
                  "endColumn": 5
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::input_adapter::operator class std::shared_ptr<struct nlohmann::detail::input_adapter_protocol>(void)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10270,
                  "startColumn": 33,
                  "endLine": 10270,
                  "endColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "struct nlohmann::detail::dtoa_impl::cached_power __cdecl nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent(int)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10270,
                  "startColumn": 33,
                  "endLine": 10270,
                  "endColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "struct nlohmann::detail::dtoa_impl::cached_power __cdecl nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent(int)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10117,
                  "startColumn": 21,
                  "endLine": 10117,
                  "endColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "struct nlohmann::detail::dtoa_impl::cached_power __cdecl nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent(int)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::dtoa_impl::find_largest_pow10' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10281,
                  "startColumn": 12,
                  "endLine": 10281,
                  "endColumn": 12
                }
              },
              "fullyQualifiedLogicalName": "int __cdecl nlohmann::detail::dtoa_impl::find_largest_pow10(unsigned int,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10369,
                  "startColumn": 9,
                  "endLine": 10369,
                  "endColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_round(char *,int,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10337,
                  "startColumn": 13,
                  "endLine": 10337,
                  "endColumn": 13
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_round(char *,int,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::dtoa_impl::grisu2_round' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10337,
                  "startColumn": 13,
                  "endLine": 10337,
                  "endColumn": 13
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_round(char *,int,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10455,
                  "startColumn": 9,
                  "endLine": 10455,
                  "endColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10562,
                  "startColumn": 9,
                  "endLine": 10562,
                  "endColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'buffer' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10378,
                  "startColumn": 13,
                  "endLine": 10378,
                  "endColumn": 13
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10411,
                  "startColumn": 15,
                  "endLine": 10411,
                  "endColumn": 53
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10455,
                  "startColumn": 9,
                  "endLine": 10455,
                  "endColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10474,
                  "startColumn": 40,
                  "endLine": 10474,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10490,
                  "startColumn": 44,
                  "endLine": 10490,
                  "endColumn": 59
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10562,
                  "startColumn": 9,
                  "endLine": 10562,
                  "endColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &,int &,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10723,
                  "startColumn": 10,
                  "endLine": 10723,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10727,
                  "startColumn": 10,
                  "endLine": 10727,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10735,
                  "startColumn": 10,
                  "endLine": 10735,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10736,
                  "startColumn": 10,
                  "endLine": 10736,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10740,
                  "startColumn": 10,
                  "endLine": 10740,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10742,
                  "startColumn": 10,
                  "endLine": 10742,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10746,
                  "startColumn": 10,
                  "endLine": 10746,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10748,
                  "startColumn": 10,
                  "endLine": 10748,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10750,
                  "startColumn": 10,
                  "endLine": 10750,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10715,
                  "startColumn": 14,
                  "endLine": 10715,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10730,
                  "startColumn": 14,
                  "endLine": 10730,
                  "endColumn": 36
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10736,
                  "startColumn": 10,
                  "endLine": 10736,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10740,
                  "startColumn": 10,
                  "endLine": 10740,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10742,
                  "startColumn": 10,
                  "endLine": 10742,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10746,
                  "startColumn": 10,
                  "endLine": 10746,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10748,
                  "startColumn": 10,
                  "endLine": 10748,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10750,
                  "startColumn": 10,
                  "endLine": 10750,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::dtoa_impl::append_exponent' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10715,
                  "startColumn": 14,
                  "endLine": 10715,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10727 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10727,
                  "startColumn": 10,
                  "endLine": 10727,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10727,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10723 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10723,
                  "startColumn": 10,
                  "endLine": 10723,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10723,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10735 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10735,
                  "startColumn": 10,
                  "endLine": 10735,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10735,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10746 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10746,
                  "startColumn": 10,
                  "endLine": 10746,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10746,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10740 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10740,
                  "startColumn": 10,
                  "endLine": 10740,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10740,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10736 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10736,
                  "startColumn": 10,
                  "endLine": 10736,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10736,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10748 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10748,
                  "startColumn": 10,
                  "endLine": 10748,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10748,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10742 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10742,
                  "startColumn": 10,
                  "endLine": 10742,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10742,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10750 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10750,
                  "startColumn": 10,
                  "endLine": 10750,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10750,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(10715's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10736,
                  "startColumn": 10,
                  "endLine": 10736,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::append_exponent(char *,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10736,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10742,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10750,
                            "startColumn": 16
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 3,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10753,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10783,
                  "startColumn": 14,
                  "endLine": 10783,
                  "endColumn": 59
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10785,
                  "startColumn": 9,
                  "endLine": 10785,
                  "endColumn": 22
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10786,
                  "startColumn": 9,
                  "endLine": 10786,
                  "endColumn": 22
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10787,
                  "startColumn": 9,
                  "endLine": 10787,
                  "endColumn": 27
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10797,
                  "startColumn": 14,
                  "endLine": 10797,
                  "endColumn": 70
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10797,
                  "startColumn": 14,
                  "endLine": 10797,
                  "endColumn": 70
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10798,
                  "startColumn": 9,
                  "endLine": 10798,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10799,
                  "startColumn": 9,
                  "endLine": 10799,
                  "endColumn": 27
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10807,
                  "startColumn": 14,
                  "endLine": 10807,
                  "endColumn": 63
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10808,
                  "startColumn": 9,
                  "endLine": 10808,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10809,
                  "startColumn": 9,
                  "endLine": 10809,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10810,
                  "startColumn": 14,
                  "endLine": 10810,
                  "endColumn": 56
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10811,
                  "startColumn": 9,
                  "endLine": 10811,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10819,
                  "startColumn": 9,
                  "endLine": 10819,
                  "endColumn": 16
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10826,
                  "startColumn": 14,
                  "endLine": 10826,
                  "endColumn": 64
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10826,
                  "startColumn": 14,
                  "endLine": 10826,
                  "endColumn": 64
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10827,
                  "startColumn": 9,
                  "endLine": 10827,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10828,
                  "startColumn": 9,
                  "endLine": 10828,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10831,
                  "startColumn": 6,
                  "endLine": 10831,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10765,
                  "startColumn": 14,
                  "endLine": 10765,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10783,
                  "startColumn": 14,
                  "endLine": 10783,
                  "endColumn": 59
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10797,
                  "startColumn": 14,
                  "endLine": 10797,
                  "endColumn": 70
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10807,
                  "startColumn": 14,
                  "endLine": 10807,
                  "endColumn": 63
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10810,
                  "startColumn": 14,
                  "endLine": 10810,
                  "endColumn": 56
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10826,
                  "startColumn": 14,
                  "endLine": 10826,
                  "endColumn": 64
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10831 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10831,
                  "startColumn": 6,
                  "endLine": 10831,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10831,
                            "startColumn": 12
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26486",
          "message": {
            "text": "Don't pass a pointer that may be invalid to a function. Parameter 0 'buf' in call to 'nlohmann::detail::dtoa_impl::append_exponent' may be invalid (lifetime.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10832,
                  "startColumn": 12,
                  "endLine": 10832,
                  "endColumn": 37
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10831,
                            "startColumn": 12
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(10765's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10831,
                  "startColumn": 6,
                  "endLine": 10831,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10831,
                            "startColumn": 12
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10832,
                            "startColumn": 27
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'swap()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 20340,
                  "startColumn": 5,
                  "endLine": 20340,
                  "endColumn": 13
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl std::swap<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,void>(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'SkillNameReplace''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 53
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'SkillDefaultVal''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 2,
                  "endLine": 192,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 2,
                  "endLine": 193,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 2,
                  "endLine": 194,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 2,
                  "endLine": 195,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 2,
                  "endLine": 196,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 2,
                  "endLine": 197,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 2,
                  "endLine": 198,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 2,
                  "endLine": 199,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 2,
                  "endLine": 200,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 2,
                  "endLine": 201,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 2,
                  "endLine": 202,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'TempInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 2,
                  "endLine": 207,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 2,
                  "endLine": 208,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 2,
                  "endLine": 209,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 2,
                  "endLine": 210,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 2,
                  "endLine": 211,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 2,
                  "endLine": 212,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 2,
                  "endLine": 213,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 2,
                  "endLine": 214,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 2,
                  "endLine": 215,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 2,
                  "endLine": 216,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 2,
                  "endLine": 217,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'LongInsanity''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 2,
                  "endLine": 222,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 2,
                  "endLine": 223,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 2,
                  "endLine": 224,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 2,
                  "endLine": 225,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 2,
                  "endLine": 226,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 2,
                  "endLine": 227,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 2,
                  "endLine": 228,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 2,
                  "endLine": 229,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 2,
                  "endLine": 230,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 2,
                  "endLine": 231,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 2,
                  "endLine": 232,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 2,
                  "endLine": 233,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 2,
                  "endLine": 234,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 2,
                  "endLine": 235,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 2,
                  "endLine": 236,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 2,
                  "endLine": 237,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 2,
                  "endLine": 238,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 2,
                  "endLine": 239,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 2,
                  "endLine": 240,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 2,
                  "endLine": 241,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 2,
                  "endLine": 242,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 2,
                  "endLine": 243,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 2,
                  "endLine": 244,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 2,
                  "endLine": 245,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 2,
                  "endLine": 246,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 2,
                  "endLine": 247,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 2,
                  "endLine": 248,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 2,
                  "endLine": 249,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 2,
                  "endLine": 250,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 2,
                  "endLine": 251,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 2,
                  "endLine": 252,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 2,
                  "endLine": 253,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 2,
                  "endLine": 254,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 2,
                  "endLine": 255,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 2,
                  "endLine": 256,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 2,
                  "endLine": 257,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 2,
                  "endLine": 258,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 2,
                  "endLine": 259,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 2,
                  "endLine": 260,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 2,
                  "endLine": 261,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 2,
                  "endLine": 262,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 2,
                  "endLine": 263,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 2,
                  "endLine": 264,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 2,
                  "endLine": 265,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 2,
                  "endLine": 266,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 2,
                  "endLine": 267,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 2,
                  "endLine": 268,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 2,
                  "endLine": 269,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 2,
                  "endLine": 270,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 2,
                  "endLine": 271,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 2,
                  "endLine": 272,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 2,
                  "endLine": 273,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 2,
                  "endLine": 274,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 2,
                  "endLine": 275,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 2,
                  "endLine": 276,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 2,
                  "endLine": 277,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 2,
                  "endLine": 278,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 2,
                  "endLine": 279,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 2,
                  "endLine": 280,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 2,
                  "endLine": 281,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 2,
                  "endLine": 282,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 2,
                  "endLine": 283,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 2,
                  "endLine": 284,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 2,
                  "endLine": 285,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 2,
                  "endLine": 286,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 2,
                  "endLine": 287,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 2,
                  "endLine": 288,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 2,
                  "endLine": 289,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 2,
                  "endLine": 290,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 2,
                  "endLine": 291,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 2,
                  "endLine": 292,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 2,
                  "endLine": 293,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 2,
                  "endLine": 294,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 2,
                  "endLine": 295,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 2,
                  "endLine": 296,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 2,
                  "endLine": 297,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 2,
                  "endLine": 298,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 2,
                  "endLine": 299,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 2,
                  "endLine": 300,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 2,
                  "endLine": 301,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 2,
                  "endLine": 302,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 2,
                  "endLine": 303,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 2,
                  "endLine": 304,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 2,
                  "endLine": 305,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 2,
                  "endLine": 306,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 2,
                  "endLine": 307,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 2,
                  "endLine": 308,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 2,
                  "endLine": 309,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 2,
                  "endLine": 310,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 2,
                  "endLine": 311,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 2,
                  "endLine": 312,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 2,
                  "endLine": 313,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 2,
                  "endLine": 314,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 2,
                  "endLine": 315,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 2,
                  "endLine": 316,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 2,
                  "endLine": 317,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 2,
                  "endLine": 318,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 2,
                  "endLine": 319,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 2,
                  "endLine": 320,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 2,
                  "endLine": 321,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 2,
                  "endLine": 322,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strFear''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 2,
                  "endLine": 325,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 2,
                  "endLine": 326,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 2,
                  "endLine": 327,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 2,
                  "endLine": 328,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 2,
                  "endLine": 329,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 2,
                  "endLine": 330,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 2,
                  "endLine": 331,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 2,
                  "endLine": 332,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 2,
                  "endLine": 333,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 2,
                  "endLine": 334,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 2,
                  "endLine": 335,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 2,
                  "endLine": 336,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 2,
                  "endLine": 337,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 2,
                  "endLine": 338,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 2,
                  "endLine": 339,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 2,
                  "endLine": 340,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 2,
                  "endLine": 341,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 2,
                  "endLine": 342,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 2,
                  "endLine": 343,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 2,
                  "endLine": 344,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 2,
                  "endLine": 345,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 2,
                  "endLine": 346,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 2,
                  "endLine": 347,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 2,
                  "endLine": 348,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 2,
                  "endLine": 349,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 2,
                  "endLine": 350,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 2,
                  "endLine": 351,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 2,
                  "endLine": 352,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 2,
                  "endLine": 353,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 2,
                  "endLine": 354,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 2,
                  "endLine": 355,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 2,
                  "endLine": 356,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 2,
                  "endLine": 357,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 2,
                  "endLine": 358,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 2,
                  "endLine": 359,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 2,
                  "endLine": 360,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 2,
                  "endLine": 361,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 2,
                  "endLine": 362,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 2,
                  "endLine": 363,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 2,
                  "endLine": 364,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 2,
                  "endLine": 365,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 2,
                  "endLine": 366,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 2,
                  "endLine": 367,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 2,
                  "endLine": 368,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 2,
                  "endLine": 369,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 2,
                  "endLine": 370,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 2,
                  "endLine": 371,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 2,
                  "endLine": 372,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 2,
                  "endLine": 373,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 2,
                  "endLine": 374,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 2,
                  "endLine": 375,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 2,
                  "endLine": 376,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 2,
                  "endLine": 377,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 2,
                  "endLine": 378,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 2,
                  "endLine": 379,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 2,
                  "endLine": 380,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 2,
                  "endLine": 381,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 2,
                  "endLine": 382,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 2,
                  "endLine": 383,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 2,
                  "endLine": 384,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 2,
                  "endLine": 385,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 2,
                  "endLine": 386,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 2,
                  "endLine": 387,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 2,
                  "endLine": 388,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 2,
                  "endLine": 389,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 2,
                  "endLine": 390,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 2,
                  "endLine": 391,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 2,
                  "endLine": 392,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 2,
                  "endLine": 393,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 2,
                  "endLine": 394,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 2,
                  "endLine": 395,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 2,
                  "endLine": 396,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 2,
                  "endLine": 397,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 2,
                  "endLine": 398,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 2,
                  "endLine": 399,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 2,
                  "endLine": 400,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 2,
                  "endLine": 401,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 2,
                  "endLine": 402,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 2,
                  "endLine": 403,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 2,
                  "endLine": 404,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 2,
                  "endLine": 405,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 2,
                  "endLine": 406,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 2,
                  "endLine": 407,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 2,
                  "endLine": 408,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 2,
                  "endLine": 409,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 2,
                  "endLine": 410,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 2,
                  "endLine": 411,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 2,
                  "endLine": 412,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 2,
                  "endLine": 413,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 2,
                  "endLine": 414,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 2,
                  "endLine": 415,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 2,
                  "endLine": 416,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 2,
                  "endLine": 417,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 2,
                  "endLine": 418,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 2,
                  "endLine": 419,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 2,
                  "endLine": 420,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 2,
                  "endLine": 421,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 2,
                  "endLine": 422,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 2,
                  "endLine": 423,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 2,
                  "endLine": 424,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 2,
                  "endLine": 425,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strPanic''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 44,
                  "endLine": 14,
                  "endColumn": 44
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Ver_Without_Build''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 39,
                  "endLine": 15,
                  "endColumn": 49
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'DiceRequestHeader''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::to_string' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 66,
                  "endLine": 16,
                  "endColumn": 76
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 30,
                  "endLine": 16,
                  "endColumn": 55
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 30,
                  "endLine": 16,
                  "endColumn": 76
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 30,
                  "endLine": 16,
                  "endColumn": 90
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 36,
                  "endLine": 17,
                  "endColumn": 36
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Short_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 35,
                  "endLine": 18,
                  "endColumn": 41
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Head_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 35,
                  "endLine": 18,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Head_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 35,
                  "endLine": 19,
                  "endColumn": 65
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Full_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 34,
                  "endLine": 20,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'Dice_Bot_Ver''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::operator+<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strHlpMsg''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 1
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'strHlpMsgList''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 2,
                  "endLine": 75,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 2,
                  "endLine": 76,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 2,
                  "endLine": 77,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 2,
                  "endLine": 78,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 2,
                  "endLine": 79,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 2,
                  "endLine": 80,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 2,
                  "endLine": 81,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 2,
                  "endLine": 82,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 2,
                  "endLine": 83,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 2,
                  "endLine": 84,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 2,
                  "endLine": 85,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 2,
                  "endLine": 86,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 2,
                  "endLine": 87,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 2,
                  "endLine": 88,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 2,
                  "endLine": 89,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 2,
                  "endLine": 90,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 2,
                  "endLine": 91,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 2,
                  "endLine": 92,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 2,
                  "endLine": 93,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 2,
                  "endLine": 94,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 2,
                  "endLine": 95,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 2,
                  "endLine": 96,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 2,
                  "endLine": 98,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 2,
                  "endLine": 99,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 2,
                  "endLine": 100,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 2,
                  "endLine": 101,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 2,
                  "endLine": 102,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 2,
                  "endLine": 103,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 2,
                  "endLine": 104,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 2,
                  "endLine": 105,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 2,
                  "endLine": 106,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 2,
                  "endLine": 107,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 2,
                  "endLine": 108,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 2,
                  "endLine": 109,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 2,
                  "endLine": 110,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 2,
                  "endLine": 111,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 2,
                  "endLine": 112,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 2,
                  "endLine": 113,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 2,
                  "endLine": 114,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 2,
                  "endLine": 115,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 2,
                  "endLine": 116,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 2,
                  "endLine": 117,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 2,
                  "endLine": 118,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 2,
                  "endLine": 119,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'tarotCard''(void)"
            }
          ]
        },
        {
          "ruleId": "26460",
          "message": {
            "text": "The reference argument 'in' for function 'ReadCustomMsg' can be marked as const (con.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/custommsg.cpp"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 6,
                  "endLine": 9,
                  "endColumn": 6
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl ReadCustomMsg(class std::basic_ifstream<char,struct std::char_traits<char> > &)"
            }
          ]
        },
        {
          "ruleId": "26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11744,
                  "startColumn": 5,
                  "endLine": 11744,
                  "endColumn": 5
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::json_pointer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::json_pointer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2430,
                  "startColumn": 9,
                  "endLine": 2430,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'fill_buffer<4>()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2421,
                  "startColumn": 13,
                  "endLine": 2421,
                  "endColumn": 69
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2430,
                  "startColumn": 16,
                  "endLine": 2430,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2430,
                  "startColumn": 9,
                  "endLine": 2430,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'fill_buffer<2>()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2421,
                  "startColumn": 13,
                  "endLine": 2421,
                  "endColumn": 69
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2430,
                  "startColumn": 16,
                  "endLine": 2430,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2430,
                  "startColumn": 9,
                  "endLine": 2430,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'fill_buffer<2>()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2421,
                  "startColumn": 13,
                  "endLine": 2421,
                  "endColumn": 69
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2430,
                  "startColumn": 16,
                  "endLine": 2430,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "public: virtual int __thiscall nlohmann::detail::wide_string_input_adapter<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > >::get_character(void)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 17751,
                  "startColumn": 19,
                  "endLine": 17751,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::swap(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 17751,
                  "startColumn": 19,
                  "endLine": 17751,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::swap(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14352,
                  "startColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::dump(int,char,bool,enum nlohmann::detail::error_handler_t)const "
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13375,
                  "startColumn": 14,
                  "endLine": 13375,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14287,
                  "startColumn": 9,
                  "endLine": 14287,
                  "endColumn": 9
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::~basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(void)"
            }
          ]
        },
        {
          "ruleId": "26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14284,
                  "startColumn": 6,
                  "endLine": 14284,
                  "endColumn": 6
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::~basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(void)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13375,
                  "startColumn": 14,
                  "endLine": 13375,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13398,
                  "startColumn": 61,
                  "endLine": 13398,
                  "endColumn": 76
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::destroy(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13399,
                  "startColumn": 61,
                  "endLine": 13399,
                  "endColumn": 87
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::destroy(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'destroy<std::vector<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer>,std::allocator<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> > > >()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13390,
                  "startColumn": 61,
                  "endLine": 13390,
                  "endColumn": 76
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::destroy(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13391,
                  "startColumn": 61,
                  "endLine": 13391,
                  "endColumn": 86
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::destroy(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'basic_string<()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13382,
                  "startColumn": 61,
                  "endLine": 13382,
                  "endColumn": 76
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::destroy(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13383,
                  "startColumn": 61,
                  "endLine": 13383,
                  "endColumn": 87
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::destroy(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_object->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 5787,
                  "startColumn": 39,
                  "endLine": 5787,
                  "endColumn": 47
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::set_end(void)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_object->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 5750,
                  "startColumn": 39,
                  "endLine": 5750,
                  "endColumn": 47
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::set_begin(void)"
            }
          ]
        },
        {
          "ruleId": "26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 5715,
                  "startColumn": 5,
                  "endLine": 5715,
                  "endColumn": 5
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > const &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'val->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11148,
                  "startColumn": 28,
                  "endLine": 11148,
                  "endColumn": 31
                }
              },
              "fullyQualifiedLogicalName": "public: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> const &,bool,bool,unsigned int,unsigned int)"
            }
          ]
        },
        {
          "ruleId": "26416",
          "message": {
            "text": "Shared pointer parameter 'adapter' is passed by rvalue reference. Pass by value instead (r.34)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4990,
                  "startColumn": 5,
                  "endLine": 4990,
                  "endColumn": 5
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class std::shared_ptr<struct nlohmann::detail::input_adapter_protocol> &&,class std::function<bool __cdecl(int,enum nlohmann::detail::parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::parse_event_t,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &)>,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 12195,
                  "startColumn": 13,
                  "endLine": 12195,
                  "endColumn": 13
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > __cdecl nlohmann::json_pointer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::split(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 12230,
                  "startColumn": 1,
                  "endLine": 12230,
                  "endColumn": 1
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > __cdecl nlohmann::json_pointer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::split(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 12230,
                  "startColumn": 1,
                  "endLine": 12230,
                  "endColumn": 1
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > __cdecl nlohmann::json_pointer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::split(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::output_adapter<char,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator std::shared_ptr<nlohmann::detail::output_adapter_protocol<char> >' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 6436,
                  "startColumn": 5,
                  "endLine": 6436,
                  "endColumn": 5
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::output_adapter<char,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator class std::shared_ptr<struct nlohmann::detail::output_adapter_protocol<char> >(void)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&other->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14216,
                  "startColumn": 29,
                  "endLine": 14216,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &&)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'other->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14216,
                  "startColumn": 29,
                  "endLine": 14216,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &&)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'adl_serializer>()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13563,
                  "startColumn": 31,
                  "endLine": 13563,
                  "endColumn": 31
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(std::nullptr_t)"
            }
          ]
        },
        {
          "ruleId": "26485",
          "message": {
            "text": "Expression 'cs': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3930,
                  "startColumn": 23,
                  "endLine": 3930,
                  "endColumn": 79
                }
              },
              "fullyQualifiedLogicalName": "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::get_token_string(void)const "
            }
          ]
        },
        {
          "ruleId": "26485",
          "message": {
            "text": "Expression 'cs': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3931,
                  "startColumn": 17,
                  "endLine": 3931,
                  "endColumn": 27
                }
              },
              "fullyQualifiedLogicalName": "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::get_token_string(void)const "
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3930,
                  "startColumn": 23,
                  "endLine": 3930,
                  "endColumn": 79
                }
              },
              "fullyQualifiedLogicalName": "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::get_token_string(void)const "
            }
          ]
        },
        {
          "ruleId": "26416",
          "message": {
            "text": "Shared pointer parameter 'adapter' is passed by rvalue reference. Pass by value instead (r.34)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2670,
                  "startColumn": 5,
                  "endLine": 2670,
                  "endColumn": 5
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class std::shared_ptr<struct nlohmann::detail::input_adapter_protocol> &&)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11327,
                  "startColumn": 37,
                  "endLine": 11327,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11328,
                  "startColumn": 37,
                  "endLine": 11328,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11329,
                  "startColumn": 37,
                  "endLine": 11329,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11330,
                  "startColumn": 37,
                  "endLine": 11330,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11331,
                  "startColumn": 37,
                  "endLine": 11331,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11332,
                  "startColumn": 37,
                  "endLine": 11332,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11336,
                  "startColumn": 4,
                  "endLine": 11336,
                  "endColumn": 60
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11337,
                  "startColumn": 4,
                  "endLine": 11337,
                  "endColumn": 60
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11338,
                  "startColumn": 4,
                  "endLine": 11338,
                  "endColumn": 60
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11245,
                  "startColumn": 29,
                  "endLine": 11245,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11246,
                  "startColumn": 29,
                  "endLine": 11246,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11238,
                  "startColumn": 29,
                  "endLine": 11238,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11239,
                  "startColumn": 29,
                  "endLine": 11239,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11231,
                  "startColumn": 29,
                  "endLine": 11231,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11232,
                  "startColumn": 29,
                  "endLine": 11232,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11224,
                  "startColumn": 29,
                  "endLine": 11224,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11225,
                  "startColumn": 29,
                  "endLine": 11225,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11217,
                  "startColumn": 29,
                  "endLine": 11217,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11218,
                  "startColumn": 29,
                  "endLine": 11218,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11210,
                  "startColumn": 29,
                  "endLine": 11210,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11211,
                  "startColumn": 29,
                  "endLine": 11211,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11203,
                  "startColumn": 29,
                  "endLine": 11203,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11204,
                  "startColumn": 29,
                  "endLine": 11204,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11258,
                  "startColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11264,
                  "startColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11274,
                  "startColumn": 33,
                  "endLine": 11274,
                  "endColumn": 61
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11358,
                  "startColumn": 25,
                  "endLine": 11358,
                  "endColumn": 53
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26494",
          "message": {
            "text": "Variable 'codepoint' is uninitialized. Always initialize an object (type.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11183,
                  "startColumn": 18,
                  "endLine": 11183,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11258,
                  "startColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11264,
                  "startColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11264,
                  "startColumn": 52
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11193,
                  "startColumn": 52,
                  "endLine": 11193,
                  "endColumn": 55
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11327,
                  "startColumn": 37,
                  "endLine": 11327,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11328,
                  "startColumn": 37,
                  "endLine": 11328,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11329,
                  "startColumn": 37,
                  "endLine": 11329,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11330,
                  "startColumn": 37,
                  "endLine": 11330,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11331,
                  "startColumn": 37,
                  "endLine": 11331,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11332,
                  "startColumn": 37,
                  "endLine": 11332,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11336,
                  "startColumn": 37,
                  "endLine": 11336,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11337,
                  "startColumn": 37,
                  "endLine": 11337,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11338,
                  "startColumn": 37,
                  "endLine": 11338,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11302,
                  "startColumn": 46,
                  "endLine": 11302,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11245,
                  "startColumn": 29,
                  "endLine": 11245,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11246,
                  "startColumn": 29,
                  "endLine": 11246,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11238,
                  "startColumn": 29,
                  "endLine": 11238,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11239,
                  "startColumn": 29,
                  "endLine": 11239,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11231,
                  "startColumn": 29,
                  "endLine": 11231,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11232,
                  "startColumn": 29,
                  "endLine": 11232,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11224,
                  "startColumn": 29,
                  "endLine": 11224,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11225,
                  "startColumn": 29,
                  "endLine": 11225,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11217,
                  "startColumn": 29,
                  "endLine": 11217,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11218,
                  "startColumn": 29,
                  "endLine": 11218,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11210,
                  "startColumn": 29,
                  "endLine": 11210,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11211,
                  "startColumn": 29,
                  "endLine": 11211,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11203,
                  "startColumn": 29,
                  "endLine": 11203,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11204,
                  "startColumn": 29,
                  "endLine": 11204,
                  "endColumn": 50
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11274,
                  "startColumn": 33,
                  "endLine": 11274,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11274,
                  "startColumn": 58,
                  "endLine": 11274,
                  "endColumn": 61
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11358,
                  "startColumn": 25,
                  "endLine": 11358,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11358,
                  "startColumn": 50,
                  "endLine": 11358,
                  "endColumn": 53
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11383,
                  "startColumn": 38,
                  "endLine": 11383,
                  "endColumn": 42
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_escaped(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14263,
                  "startColumn": 14,
                  "endLine": 14263,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "public: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> & __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::operator=(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14263,
                  "startColumn": 14,
                  "endLine": 14263,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "public: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> & __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::operator=(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: 'allotemp.2'. '(temporary 2)' may have been invalidated at line 14266 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14266,
                  "startColumn": 9,
                  "endLine": 14266,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "public: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> & __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::operator=(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 14266,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(14251's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14266,
                  "startColumn": 9,
                  "endLine": 14266,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "public: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> & __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::operator=(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 14266,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13275,
                  "startColumn": 9,
                  "endLine": 13275,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13539,
                  "startColumn": 1,
                  "endLine": 13539,
                  "endColumn": 1
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13275,
                  "startColumn": 9,
                  "endLine": 13275,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26475",
          "message": {
            "text": "Do not use function style C-casts (es.49)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13317,
                  "startColumn": 36,
                  "endLine": 13317,
                  "endColumn": 51
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::json_value(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26475",
          "message": {
            "text": "Do not use function style C-casts (es.49)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13311,
                  "startColumn": 39,
                  "endLine": 13311,
                  "endColumn": 57
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::json_value(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26475",
          "message": {
            "text": "Do not use function style C-casts (es.49)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13305,
                  "startColumn": 38,
                  "endLine": 13305,
                  "endColumn": 55
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::json_value(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26475",
          "message": {
            "text": "Do not use function style C-casts (es.49)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13299,
                  "startColumn": 31,
                  "endLine": 13299,
                  "endColumn": 41
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value::json_value(enum nlohmann::detail::value_t)"
            }
          ]
        },
        {
          "ruleId": "26462",
          "message": {
            "text": "The value pointed to by 'loc' is assigned only once, mark it as a pointer to const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2688,
                  "startColumn": 20,
                  "endLine": 2688,
                  "endColumn": 36
                }
              },
              "fullyQualifiedLogicalName": "private: static char __cdecl nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::get_decimal_point(void)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'loc' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2688,
                  "startColumn": 20,
                  "endLine": 2688,
                  "endColumn": 36
                }
              },
              "fullyQualifiedLogicalName": "private: static char __cdecl nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::get_decimal_point(void)"
            }
          ]
        },
        {
          "ruleId": "28020",
          "message": {
            "text": "表达式“0<=_Param_(1)&&_Param_(1)<=400-1”对此调用无效。"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11588,
                  "startColumn": 23,
                  "endLine": 11588,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "private: static unsigned char __cdecl nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::decode(unsigned char &,unsigned int &,unsigned char)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11568,
                            "startColumn": 3
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11588,
                            "startColumn": 23
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11588,
                  "startColumn": 30,
                  "endLine": 11588,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "private: static unsigned char __cdecl nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::decode(unsigned char &,unsigned int &,unsigned char)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11594,
                  "startColumn": 9,
                  "endLine": 11594,
                  "endColumn": 48
                }
              },
              "fullyQualifiedLogicalName": "private: static unsigned char __cdecl nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::decode(unsigned char &,unsigned int &,unsigned char)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11588,
                  "startColumn": 30,
                  "endLine": 11588,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "private: static unsigned char __cdecl nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::decode(unsigned char &,unsigned int &,unsigned char)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11594,
                  "startColumn": 17,
                  "endLine": 11594,
                  "endColumn": 48
                }
              },
              "fullyQualifiedLogicalName": "private: static unsigned char __cdecl nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::decode(unsigned char &,unsigned int &,unsigned char)"
            }
          ]
        },
        {
          "ruleId": "26462",
          "message": {
            "text": "The value pointed to by 'end' is assigned only once, mark it as a pointer to const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11491,
                  "startColumn": 13,
                  "endLine": 11491,
                  "endColumn": 87
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_float(double,struct std::integral_constant<bool,1>)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11491,
                  "startColumn": 41,
                  "endLine": 11491,
                  "endColumn": 87
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_float(double,struct std::integral_constant<bool,1>)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11493,
                  "startColumn": 9,
                  "endLine": 11493,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_float(double,struct std::integral_constant<bool,1>)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3778,
                  "startColumn": 17,
                  "endLine": 3778,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_literal(char const *,unsigned int,enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'literal_text' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3772,
                  "startColumn": 16,
                  "endLine": 3772,
                  "endColumn": 16
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_literal(char const *,unsigned int,enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3733,
                  "startColumn": 17,
                  "endLine": 3733,
                  "endColumn": 65
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3749,
                  "startColumn": 17,
                  "endLine": 3749,
                  "endColumn": 63
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3473,
                  "startColumn": 17,
                  "endLine": 3473,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3459,
                  "startColumn": 17,
                  "endLine": 3459,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3453,
                  "startColumn": 17,
                  "endLine": 3453,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3507,
                  "startColumn": 17,
                  "endLine": 3507,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3567,
                  "startColumn": 17,
                  "endLine": 3567,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3560,
                  "startColumn": 17,
                  "endLine": 3560,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3554,
                  "startColumn": 17,
                  "endLine": 3554,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3571,
                  "startColumn": 17,
                  "endLine": 3571,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3493,
                  "startColumn": 17,
                  "endLine": 3493,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3531,
                  "startColumn": 17,
                  "endLine": 3531,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3524,
                  "startColumn": 17,
                  "endLine": 3524,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3591,
                  "startColumn": 17,
                  "endLine": 3591,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3624,
                  "startColumn": 17,
                  "endLine": 3624,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3655,
                  "startColumn": 17,
                  "endLine": 3655,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3640,
                  "startColumn": 17,
                  "endLine": 3640,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3682,
                  "startColumn": 17,
                  "endLine": 3682,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3708,
                  "startColumn": 17,
                  "endLine": 3708,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3712,
                  "startColumn": 17,
                  "endLine": 3712,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3617,
                  "startColumn": 17,
                  "endLine": 3617,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3628,
                  "startColumn": 17,
                  "endLine": 3628,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26438",
          "message": {
            "text": "Avoid 'goto' (es.76)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3535,
                  "startColumn": 17,
                  "endLine": 3535,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: enum nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::token_type __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::scan_number(void)"
            }
          ]
        },
        {
          "ruleId": "26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'push_back()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3796,
                  "startColumn": 9,
                  "endLine": 3796,
                  "endColumn": 69
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::reset(void)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2768,
                  "startColumn": 17,
                  "endLine": 2768,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: bool __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::next_byte_in_range(class std::initializer_list<int>)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2765,
                  "startColumn": 1,
                  "endLine": 2765,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "private: bool __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::next_byte_in_range(class std::initializer_list<int>)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'range' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2765,
                  "startColumn": 19,
                  "endLine": 2765,
                  "endColumn": 39
                }
              },
              "fullyQualifiedLogicalName": "private: bool __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::next_byte_in_range(class std::initializer_list<int>)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(++range)'. 'range' may have been invalidated at line 2768 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2768,
                  "startColumn": 17,
                  "endLine": 2768,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: bool __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::next_byte_in_range(class std::initializer_list<int>)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 2768,
                            "startColumn": 17
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*range'. 'range' may have been invalidated at line 2765 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2768,
                  "startColumn": 17,
                  "endLine": 2768,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "private: bool __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::next_byte_in_range(class std::initializer_list<int>)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 2765,
                            "startColumn": 19
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "28020",
          "message": {
            "text": "表达式“0<=_Param_(1)&&_Param_(1)<=64-1”对此调用无效。"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11452,
                  "startColumn": 13,
                  "endLine": 11452,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<__int64,0>(__int64)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11429,
                            "startColumn": 15
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11435,
                            "startColumn": 20
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11436,
                            "startColumn": 21
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 3,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11438,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 4,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11443,
                            "startColumn": 24
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 5,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11444,
                            "startColumn": 32
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 6,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11445,
                            "startColumn": 15
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 7,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11438,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 8,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11443,
                            "startColumn": 24
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 9,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11444,
                            "startColumn": 32
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 10,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11445,
                            "startColumn": 15
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 11,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11438,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 12,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11448,
                            "startColumn": 13
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 13,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 11452,
                            "startColumn": 32
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11444,
                  "startColumn": 13,
                  "endLine": 11444,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<__int64,0>(__int64)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11452,
                  "startColumn": 13,
                  "endLine": 11452,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<__int64,0>(__int64)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11443,
                  "startColumn": 37,
                  "endLine": 11443,
                  "endColumn": 64
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<__int64,0>(__int64)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11444,
                  "startColumn": 13,
                  "endLine": 11444,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<__int64,0>(__int64)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11444,
                  "startColumn": 13,
                  "endLine": 11444,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<__int64,0>(__int64)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11452,
                  "startColumn": 13,
                  "endLine": 11452,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<__int64,0>(__int64)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11444,
                  "startColumn": 13,
                  "endLine": 11444,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<unsigned __int64,0>(unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11452,
                  "startColumn": 13,
                  "endLine": 11452,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<unsigned __int64,0>(unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11443,
                  "startColumn": 37,
                  "endLine": 11443,
                  "endColumn": 64
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<unsigned __int64,0>(unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11444,
                  "startColumn": 13,
                  "endLine": 11444,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<unsigned __int64,0>(unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11444,
                  "startColumn": 13,
                  "endLine": 11444,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<unsigned __int64,0>(unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 11452,
                  "startColumn": 13,
                  "endLine": 11452,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: void __thiscall nlohmann::detail::serializer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::dump_integer<unsigned __int64,0>(unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26496",
          "message": {
            "text": "The variable 'deleter' is assigned only once, mark it as const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13209,
                  "startColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > >(void)"
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(13204's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13216,
                  "startColumn": 9,
                  "endLine": 13216,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > >(void)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 13216,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26496",
          "message": {
            "text": "The variable 'deleter' is assigned only once, mark it as const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13209,
                  "startColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > >(void)"
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(13204's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13216,
                  "startColumn": 9,
                  "endLine": 13216,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > >(void)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 13216,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26496",
          "message": {
            "text": "The variable 'deleter' is assigned only once, mark it as const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13209,
                  "startColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,char const (&)[1]>(char const (&)[1])"
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(13204's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13216,
                  "startColumn": 9,
                  "endLine": 13216,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,char const (&)[1]>(char const (&)[1])"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 13216,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10857,
                  "startColumn": 10,
                  "endLine": 10857,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10862,
                  "startColumn": 10,
                  "endLine": 10862,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10864,
                  "startColumn": 10,
                  "endLine": 10864,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10865,
                  "startColumn": 10,
                  "endLine": 10865,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'first' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10848,
                  "startColumn": 1,
                  "endLine": 10848,
                  "endColumn": 1
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10862 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10862,
                  "startColumn": 10,
                  "endLine": 10862,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10862,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10857 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10857,
                  "startColumn": 10,
                  "endLine": 10857,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10857,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10864 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10864,
                  "startColumn": 10,
                  "endLine": 10864,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10864,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10865 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10865,
                  "startColumn": 10,
                  "endLine": 10865,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10865,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26486",
          "message": {
            "text": "Don't pass a pointer that may be invalid to a function. Parameter 0 'first' in call to 'nlohmann::detail::dtoa_impl::grisu2<double>' may be invalid (lifetime.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10877,
                  "startColumn": 16,
                  "endLine": 10877,
                  "endColumn": 53
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10857,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26486",
          "message": {
            "text": "Don't pass a pointer that may be invalid to a function. Parameter 0 'first' in call to 'nlohmann::detail::dtoa_impl::format_buffer' may be invalid (lifetime.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10890,
                  "startColumn": 23,
                  "endLine": 10890,
                  "endColumn": 76
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10857,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(10848's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10865,
                  "startColumn": 10,
                  "endLine": 10865,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10865,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10866,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(10848's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10857,
                  "startColumn": 10,
                  "endLine": 10857,
                  "endColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "char * __cdecl nlohmann::detail::to_chars<double>(char *,char const *,double)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10857,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 10890,
                            "startColumn": 36
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2357,
                  "startColumn": 13,
                  "endLine": 2357,
                  "endColumn": 25
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2363,
                  "startColumn": 46,
                  "endLine": 2363,
                  "endColumn": 65
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2368,
                  "startColumn": 17,
                  "endLine": 2368,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2373,
                  "startColumn": 17,
                  "endLine": 2373,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2374,
                  "startColumn": 17,
                  "endLine": 2374,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2379,
                  "startColumn": 17,
                  "endLine": 2379,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2380,
                  "startColumn": 17,
                  "endLine": 2380,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2381,
                  "startColumn": 17,
                  "endLine": 2381,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2388,
                  "startColumn": 55,
                  "endLine": 2388,
                  "endColumn": 74
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2390,
                  "startColumn": 21,
                  "endLine": 2390,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2391,
                  "startColumn": 21,
                  "endLine": 2391,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2392,
                  "startColumn": 21,
                  "endLine": 2392,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2393,
                  "startColumn": 21,
                  "endLine": 2393,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2400,
                  "startColumn": 21,
                  "endLine": 2400,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,2>::fill_buffer(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2357,
                  "startColumn": 13,
                  "endLine": 2357,
                  "endColumn": 25
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2363,
                  "startColumn": 46,
                  "endLine": 2363,
                  "endColumn": 65
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2368,
                  "startColumn": 17,
                  "endLine": 2368,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2373,
                  "startColumn": 17,
                  "endLine": 2373,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2374,
                  "startColumn": 17,
                  "endLine": 2374,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2379,
                  "startColumn": 17,
                  "endLine": 2379,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2380,
                  "startColumn": 17,
                  "endLine": 2380,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2381,
                  "startColumn": 17,
                  "endLine": 2381,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2388,
                  "startColumn": 55,
                  "endLine": 2388,
                  "endColumn": 74
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2390,
                  "startColumn": 21,
                  "endLine": 2390,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2391,
                  "startColumn": 21,
                  "endLine": 2391,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2392,
                  "startColumn": 21,
                  "endLine": 2392,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2393,
                  "startColumn": 21,
                  "endLine": 2393,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2400,
                  "startColumn": 21,
                  "endLine": 2400,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,2>::fill_buffer(class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2302,
                  "startColumn": 13,
                  "endLine": 2302,
                  "endColumn": 25
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2308,
                  "startColumn": 46,
                  "endLine": 2308,
                  "endColumn": 65
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2313,
                  "startColumn": 17,
                  "endLine": 2313,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2318,
                  "startColumn": 17,
                  "endLine": 2318,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2319,
                  "startColumn": 17,
                  "endLine": 2319,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2324,
                  "startColumn": 17,
                  "endLine": 2324,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2325,
                  "startColumn": 17,
                  "endLine": 2325,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2326,
                  "startColumn": 17,
                  "endLine": 2326,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2331,
                  "startColumn": 17,
                  "endLine": 2331,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2332,
                  "startColumn": 17,
                  "endLine": 2332,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2333,
                  "startColumn": 17,
                  "endLine": 2333,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2334,
                  "startColumn": 17,
                  "endLine": 2334,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2340,
                  "startColumn": 17,
                  "endLine": 2340,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::wide_string_input_helper<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,4>::fill_buffer(class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> > const &,unsigned int &,class std::array<int,4> &,unsigned int &,unsigned int &)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4711,
                  "startColumn": 20,
                  "endLine": 4711,
                  "endColumn": 110
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::end_array(void)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4729,
                  "startColumn": 17,
                  "endLine": 4729,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::end_array(void)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4686,
                  "startColumn": 27,
                  "endLine": 4686,
                  "endColumn": 100
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::start_array(unsigned int)"
            }
          ]
        },
        {
          "ruleId": "26486",
          "message": {
            "text": "Don't pass a pointer that may be invalid to a function. Parameter 0 'val.second' in call to 'std::vector<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> *,std::allocator<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> *> >::push_back' may be invalid (lifetime.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4690,
                  "startColumn": 9,
                  "endLine": 4690,
                  "endColumn": 32
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::start_array(unsigned int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 4690,
                            "startColumn": 28
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4653,
                  "startColumn": 21,
                  "endLine": 4653,
                  "endColumn": 112
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::end_object(void)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4637,
                  "startColumn": 27,
                  "endLine": 4637,
                  "endColumn": 92
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::key(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4643,
                  "startColumn": 32,
                  "endLine": 4643,
                  "endColumn": 48
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::key(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4613,
                  "startColumn": 27,
                  "endLine": 4613,
                  "endColumn": 101
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::start_object(unsigned int)"
            }
          ]
        },
        {
          "ruleId": "26486",
          "message": {
            "text": "Don't pass a pointer that may be invalid to a function. Parameter 0 'val.second' in call to 'std::vector<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> *,std::allocator<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> *> >::push_back' may be invalid (lifetime.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4617,
                  "startColumn": 9,
                  "endLine": 4617,
                  "endColumn": 32
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::start_object(unsigned int)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 4617,
                            "startColumn": 28
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4450,
                  "startColumn": 28,
                  "endLine": 4450,
                  "endColumn": 44
                }
              },
              "fullyQualifiedLogicalName": "public: bool __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::key(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >::get_string' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 3902,
                  "startColumn": 15,
                  "endLine": 3902,
                  "endColumn": 15
                }
              },
              "fullyQualifiedLogicalName": "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall nlohmann::detail::lexer<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::get_string(void)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 16975,
                  "startColumn": 24,
                  "endLine": 16975,
                  "endColumn": 24
                }
              },
              "fullyQualifiedLogicalName": "public: unsigned int __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::max_size(void)const "
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> const &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> const &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13364,
                  "startColumn": 9,
                  "endLine": 13364,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13352,
                  "startColumn": 9,
                  "endLine": 13352,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13340,
                  "startColumn": 9,
                  "endLine": 13340,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13273,
                  "startColumn": 9,
                  "endLine": 13273,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13271,
                  "startColumn": 9,
                  "endLine": 13271,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13269,
                  "startColumn": 9,
                  "endLine": 13269,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13267,
                  "startColumn": 9,
                  "endLine": 13267,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 16911,
                  "startColumn": 24,
                  "endLine": 16911,
                  "endColumn": 24
                }
              },
              "fullyQualifiedLogicalName": "public: unsigned int __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::size(void)const "
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2526,
                  "startColumn": 26,
                  "endLine": 2526,
                  "endColumn": 67
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::input_adapter::input_adapter<char const *,0>(char const *,char const *)"
            }
          ]
        },
        {
          "ruleId": "26473",
          "message": {
            "text": "Don't cast between pointer types where the source type and the target type are the same (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2530,
                  "startColumn": 57,
                  "endLine": 2530,
                  "endColumn": 90
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::input_adapter::input_adapter<char const *,0>(char const *,char const *)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2526,
                  "startColumn": 26,
                  "endLine": 2526,
                  "endColumn": 67
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::input_adapter::input_adapter<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,0>(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >)"
            }
          ]
        },
        {
          "ruleId": "26473",
          "message": {
            "text": "Don't cast between pointer types where the source type and the target type are the same (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2530,
                  "startColumn": 57,
                  "endLine": 2530,
                  "endColumn": 90
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::detail::input_adapter::input_adapter<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,0>(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 44,
                  "endLine": 4801,
                  "endColumn": 111
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<enum nlohmann::detail::value_t>(enum nlohmann::detail::value_t &&,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4827,
                  "startColumn": 13,
                  "endLine": 4827,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<enum nlohmann::detail::value_t>(enum nlohmann::detail::value_t &&,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 16046,
                  "startColumn": 46,
                  "endLine": 16046,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "public: class nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::erase<class nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >,0>(class nlohmann::detail::iter_impl<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,0>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,0>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 44,
                  "endLine": 4801,
                  "endColumn": 111
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4827,
                  "startColumn": 13,
                  "endLine": 4827,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 44,
                  "endLine": 4801,
                  "endColumn": 111
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<double &>(double &,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4827,
                  "startColumn": 13,
                  "endLine": 4827,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<double &>(double &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 44,
                  "endLine": 4801,
                  "endColumn": 111
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<unsigned __int64 &>(unsigned __int64 &,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4827,
                  "startColumn": 13,
                  "endLine": 4827,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<unsigned __int64 &>(unsigned __int64 &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 44,
                  "endLine": 4801,
                  "endColumn": 111
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<__int64 &>(__int64 &,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4827,
                  "startColumn": 13,
                  "endLine": 4827,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<__int64 &>(__int64 &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 44,
                  "endLine": 4801,
                  "endColumn": 111
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<bool &>(bool &,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4827,
                  "startColumn": 13,
                  "endLine": 4827,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<bool &>(bool &,bool)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 44,
                  "endLine": 4801,
                  "endColumn": 111
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<std::nullptr_t>(std::nullptr_t &&,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4827,
                  "startColumn": 13,
                  "endLine": 4827,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: struct std::pair<bool,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> *> __thiscall nlohmann::detail::json_sax_dom_callback_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<std::nullptr_t>(std::nullptr_t &&,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4532,
                  "startColumn": 13,
                  "endLine": 4532,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> * __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<enum nlohmann::detail::value_t>(enum nlohmann::detail::value_t &&)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4532,
                  "startColumn": 13,
                  "endLine": 4532,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> * __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4532,
                  "startColumn": 13,
                  "endLine": 4532,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> * __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<double &>(double &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4532,
                  "startColumn": 13,
                  "endLine": 4532,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> * __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<unsigned __int64 &>(unsigned __int64 &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4532,
                  "startColumn": 13,
                  "endLine": 4532,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> * __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<__int64 &>(__int64 &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4532,
                  "startColumn": 13,
                  "endLine": 4532,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> * __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<bool &>(bool &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '(result.back)->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 4532,
                  "startColumn": 13,
                  "endLine": 4532,
                  "endColumn": 29
                }
              },
              "fullyQualifiedLogicalName": "private: class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> * __thiscall nlohmann::detail::json_sax_dom_parser<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >::handle_value<std::nullptr_t>(std::nullptr_t &&)"
            }
          ]
        },
        {
          "ruleId": "26496",
          "message": {
            "text": "The variable 'deleter' is assigned only once, mark it as const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13209,
                  "startColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > >,class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > const &>(class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > const &)"
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(13204's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13216,
                  "startColumn": 9,
                  "endLine": 13216,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > >,class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > const &>(class std::vector<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,class std::allocator<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > const &)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 13216,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26496",
          "message": {
            "text": "The variable 'deleter' is assigned only once, mark it as const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13209,
                  "startColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > >,class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > const &>(class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > const &)"
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(13204's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13216,
                  "startColumn": 9,
                  "endLine": 13216,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > >,class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > const &>(class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> > > > const &)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 13216,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26496",
          "message": {
            "text": "The variable 'deleter' is assigned only once, mark it as const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13209,
                  "startColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(13204's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 13216,
                  "startColumn": 9,
                  "endLine": 13216,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::create<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                          },
                          "region": {
                            "startLine": 13216,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'struct nlohmann::detail::output_adapter_protocol<char>', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 6347,
                  "startColumn": 14,
                  "endLine": 6347,
                  "endColumn": 14
                }
              },
              "fullyQualifiedLogicalName": "public: virtual __thiscall nlohmann::detail::output_adapter_protocol<char>::~output_adapter_protocol<char>(void)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 10007,
                  "startColumn": 28,
                  "endLine": 10007,
                  "endColumn": 67
                }
              },
              "fullyQualifiedLogicalName": "struct nlohmann::detail::dtoa_impl::boundaries __cdecl nlohmann::detail::dtoa_impl::compute_boundaries<double>(double)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><double &,double,0>(double &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><double &,double,0>(double &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><unsigned __int64 &,unsigned __int64,0>(unsigned __int64 &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><unsigned __int64 &,unsigned __int64,0>(unsigned __int64 &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><__int64 &,__int64,0>(__int64 &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><__int64 &,__int64,0>(__int64 &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><bool &,bool,0>(bool &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 18709,
                  "startColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer><bool &,bool,0>(bool &)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'nlohmann::detail::dtoa_impl::reinterpret_bits<unsigned __int64,double>' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 9837,
                  "startColumn": 1,
                  "endLine": 9837,
                  "endColumn": 1
                }
              },
              "fullyQualifiedLogicalName": "unsigned __int64 __cdecl nlohmann::detail::dtoa_impl::reinterpret_bits<unsigned __int64,double>(double)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'this->m_value' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 14785,
                  "startColumn": 30,
                  "endLine": 14785,
                  "endColumn": 30
                }
              },
              "fullyQualifiedLogicalName": "private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const * __thiscall nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::get_impl_ptr(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const *)const "
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2023,
                  "startColumn": 53,
                  "endLine": 2023,
                  "endColumn": 121
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::to_json<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,unsigned __int64,0>(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 2030,
                  "startColumn": 52,
                  "endLine": 2030,
                  "endColumn": 119
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl nlohmann::detail::to_json<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>,__int64,0>(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,__int64)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1841,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<3>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1841,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<3>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1871,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<7>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,double)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1871,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<7>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,double)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1883,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<6>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1883,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<6>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,unsigned __int64)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<5>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,__int64)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<5>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,__int64)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol '&allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1829,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<4>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,bool)"
            }
          ]
        },
        {
          "ruleId": "26476",
          "message": {
            "text": "Expression/symbol 'allotemp.1' uses a naked union 'union nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer>::json_value' with multiple type pointers: Use variant instead (type.7)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp"
                },
                "region": {
                  "startLine": 1829,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: static void __cdecl nlohmann::detail::external_constructor<4>::construct<class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> >(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,bool)"
            }
          ]
        }
      ],
      "tool": {
        "name": "PREfast",
        "fullName": "PREfast Code Analysis",
        "version": "14.20.27305.0",
        "fileVersion": "14.00.27305.00"
      },
      "invocations": [
        {
          "commandLine": "\"C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\bin\\HostX86\\x86\\c1xx.dll\" -ACf{1F7B090C-16DB-4822-966A-A93D26ED4681} -ACpmspft140.dll -Alint -D_PREFAST_ -D_AST_FE_ -Analyze -zm0x00162090 -il C:\\Users\\sb6ku\\AppData\\Local\\Temp\\_CL_cb567f86ast -typedil -f CustomMsg.cpp -Ze -D_MSC_EXTENSIONS -Zp8 -ZB64 -D_INTEGRAL_MAX_BITS=64 -Gs -pc \\:/ -D_MSC_VER=1920 -D_MSC_FULL_VER=192027305 -D_MSC_BUILD=0 -D_WIN32 -D_M_IX86=600 -D_M_IX86_FP=2 -GR -D_CPPRTTI -I C:\\Users\\sb6ku\\Desktop\\Jrs_Dev\\CQSDK -nologo -W 0 -diagnostics:column- -diagnostics:caret- -D_GUARDOVERFLOW_CRT_ALLOCATORS=1 -GF -Og -Oi -Ot -Oy -ltcg -DCODE_ANALYSIS -DWIN32 -DNDEBUG -DDICE_EXPORTS -D_WINDOWS -D_USRDLL -D_WINDLL -D_MBCS -EHs -D_CPPUNWIND -EHc -clrNoPureCRT -D_MT -GS -D_M_FP_PRECISE -permissive- -Zc:wchar_t -Zc:forScope -FoRelease\\CustomMsg.obj -FdRelease\\vc142.pdb -Gd -analyze:quiet -analyze:plugin C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\bin\\HostX86\\x86\\EspXEngine.dll -FC -errorreport:prompt -analyze:ruleset C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\Rule Sets\\AllRules.ruleset -analyze:projectdirectory C:\\Users\\sb6ku\\Desktop\\Jrs_Dev\\DiceJrs -analyze:rulesetdirectory ;C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\\\Rule Sets -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\include -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\atlmfc\\include -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Auxiliary\\VS\\include -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\ucrt -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\um -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\shared -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\winrt -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\cppwinrt -I C:\\Program Files\\Windows Kits\\NETFXSDK\\4.7.2\\Include\\um -MPdiagMutex 0000000000000158"
        }
      ],
      "files": {
        "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/custommsg.cpp": {
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/json.hpp": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqlogger.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/rdconstant.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/globalvar.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/bufstream.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/jrs.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/dicejrs/encodingconvert.h": {
          "roles": [
            "resultFile"
          ]
        }
      },
      "logicalLocations": {},
      "resources": {
        "rules": {}
      }
    }
  ]
}