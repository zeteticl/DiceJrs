{
  "version": "2.0.0",
  "$schema": "http://json.schemastore.org/sarif-2.0.0",
  "runs": [
    {
      "results": [
        {
          "ruleId": "26462",
          "message": {
            "text": "The value pointed to by 'p' is assigned only once, mark it as a pointer to const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl show(void *,int)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'p' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 45
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl show(void *,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 31
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl show(void *,int)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'str' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 16,
                  "endLine": 23,
                  "endColumn": 16
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl Flip(unsigned char * const,int)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'Flip' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 16,
                  "endLine": 23,
                  "endColumn": 16
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl Flip(unsigned char * const,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 18,
                  "endLine": 29,
                  "endColumn": 25
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl Flip(unsigned char * const,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl Flip(unsigned char * const,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl Flip(unsigned char * const,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 12
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl Flip(unsigned char * const,int)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 2,
                  "endLine": 48,
                  "endColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::setData(char const *,int)"
            }
          ]
        },
        {
          "ruleId": "26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/unpack.h"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 2,
                  "endLine": 11,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "public: __thiscall Unpack::Unpack(void)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'Unpack::clear' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::clear(void)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'Unpack::len' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 13,
                  "endLine": 75,
                  "endColumn": 13
                }
              },
              "fullyQualifiedLogicalName": "public: int __thiscall Unpack::len(void)const "
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 2,
                  "endLine": 83,
                  "endColumn": 39
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(int)"
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 20,
                  "endLine": 92,
                  "endColumn": 60
                }
              },
              "fullyQualifiedLogicalName": "public: int __thiscall Unpack::getInt(void)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 50,
                  "endLine": 92,
                  "endColumn": 56
                }
              },
              "fullyQualifiedLogicalName": "public: int __thiscall Unpack::getInt(void)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 2,
                  "endLine": 100,
                  "endColumn": 39
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(__int64)"
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 20,
                  "endLine": 109,
                  "endColumn": 66
                }
              },
              "fullyQualifiedLogicalName": "public: __int64 __thiscall Unpack::getLong(void)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 56,
                  "endLine": 109,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "public: __int64 __thiscall Unpack::getLong(void)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 2,
                  "endLine": 117,
                  "endColumn": 39
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(short)"
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 20,
                  "endLine": 126,
                  "endColumn": 62
                }
              },
              "fullyQualifiedLogicalName": "public: short __thiscall Unpack::getshort(void)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 52,
                  "endLine": 126,
                  "endColumn": 58
                }
              },
              "fullyQualifiedLogicalName": "public: short __thiscall Unpack::getshort(void)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 3,
                  "endLine": 137,
                  "endColumn": 34
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(unsigned char const *,short)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 3,
                  "endLine": 155,
                  "endColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)"
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 6,
                  "endLine": 163,
                  "endColumn": 51
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 2,
                  "endLine": 163,
                  "endColumn": 81
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: 'allotemp.2'. '(temporary 2)' may have been invalidated at line 156 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 3,
                  "endLine": 156,
                  "endColumn": 11
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                          },
                          "region": {
                            "startLine": 156,
                            "startColumn": 3
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: 'allotemp.4'. '(temporary 4)' may have been invalidated at line 165 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 2,
                  "endLine": 165,
                  "endColumn": 10
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                          },
                          "region": {
                            "startLine": 165,
                            "startColumn": 2
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(151's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 3,
                  "endLine": 156,
                  "endColumn": 11
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                          },
                          "region": {
                            "startLine": 156,
                            "startColumn": 3
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26487",
          "message": {
            "text": "Don't return a pointer '(151's result)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 2,
                  "endLine": 165,
                  "endColumn": 10
                }
              },
              "fullyQualifiedLogicalName": "public: class Unpack & __thiscall Unpack::add(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                          },
                          "region": {
                            "startLine": 165,
                            "startColumn": 2
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 16,
                  "endLine": 174,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall Unpack::getstring(void)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 41,
                  "endLine": 174,
                  "endColumn": 46
                }
              },
              "fullyQualifiedLogicalName": "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall Unpack::getstring(void)"
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 48
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl toBin<int>(int &)"
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 48
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl toBin<__int64>(__int64 &)"
            }
          ]
        },
        {
          "ruleId": "26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 48
                }
              },
              "fullyQualifiedLogicalName": "unsigned char * __cdecl toBin<short>(short &)"
            }
          ]
        }
      ],
      "tool": {
        "name": "PREfast",
        "fullName": "PREfast Code Analysis",
        "version": "14.20.27305.0",
        "fileVersion": "14.00.27305.00"
      },
      "invocations": [
        {
          "commandLine": "\"C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\bin\\HostX86\\x86\\c1xx.dll\" -ACf{1F7B090C-16DB-4822-966A-A93D26ED4681} -ACpmspft140.dll -Alint -D_PREFAST_ -D_AST_FE_ -Analyze -zm0x00392090 -il C:\\Users\\sb6ku\\AppData\\Local\\Temp\\_CL_38e5fe25ast -typedil -f ..\\CQSDKCPP\\Unpack.cpp -Ze -D_MSC_EXTENSIONS -Zp8 -ZB64 -D_INTEGRAL_MAX_BITS=64 -Gs -pc \\:/ -D_MSC_VER=1920 -D_MSC_FULL_VER=192027305 -D_MSC_BUILD=0 -D_WIN32 -D_M_IX86=600 -D_M_IX86_FP=2 -GR -D_CPPRTTI -I C:\\Users\\sb6ku\\Desktop\\Jrs_Dev\\CQSDK -nologo -W 3 -diagnostics:column- -diagnostics:caret- -D_GUARDOVERFLOW_CRT_ALLOCATORS=1 -GF -Og -Oi -Ot -Oy -ltcg -DCODE_ANALYSIS -DWIN32 -DNDEBUG -DDICE_EXPORTS -D_WINDOWS -D_USRDLL -D_WINDLL -D_UNICODE -DUNICODE -EHs -D_CPPUNWIND -EHc -clrNoPureCRT -D_MT -GS -D_M_FP_PRECISE -permissive- -Zc:wchar_t -Zc:forScope -std:c++latest -FoRelease\\Unpack.obj -FdRelease\\vc142.pdb -Gd -analyze:quiet -analyze:plugin C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\bin\\HostX86\\x86\\EspXEngine.dll -FC -errorreport:prompt -analyze:ruleset C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\Rule Sets\\AllRules.ruleset -analyze:projectdirectory C:\\Users\\sb6ku\\Desktop\\Jrs_Dev\\DiceJrs -analyze:rulesetdirectory ;C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\\\Rule Sets -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\include -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\atlmfc\\include -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Auxiliary\\VS\\include -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\ucrt -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\um -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\shared -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\winrt -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\cppwinrt -I C:\\Program Files\\Windows Kits\\NETFXSDK\\4.7.2\\Include\\um -MPdiagMutex 0000000000000164"
        }
      ],
      "files": {
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqapi_ex.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqapi_ex.cpp": {
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqdefine.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/unpack.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/unpack.cpp": {
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqapi.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqevemsg.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/bufstream.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_groupmsg.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqevebasic.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqconstant.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqtools.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqstream.cpp": {
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqlogger.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqmsgsend.h": {
          "roles": [
            "resultFile"
          ]
        }
      },
      "logicalLocations": {},
      "resources": {
        "rules": {}
      }
    }
  ]
}