<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'dbManager::getDatabase' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>dbManager::getDatabase</FUNCTION>
    <DECORATED>?getDatabase@dbManager@@SAPAUsqlite3@@XZ</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'dbManager::getInstance' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>dbManager::getInstance</FUNCTION>
    <DECORATED>?getInstance@dbManager@@SAPAV1@XZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'ret' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>dbManager::{ctor}</FUNCTION>
    <DECORATED>??0dbManager@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26408</DEFECTCODE>
    <DESCRIPTION>Avoid malloc() and free(), prefer the nothrow version of new with delete (r.10).</DESCRIPTION>
    <FUNCTION>dbManager::{ctor}</FUNCTION>
    <DECORATED>??0dbManager@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class dbManager', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>dbManager::{dtor}</FUNCTION>
    <DECORATED>??1dbManager@@QAE@XZ</DECORATED>
    <FUNCLINE>42</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'ret' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>dbManager::registerTable</FUNCTION>
    <DECORATED>?registerTable@dbManager@@QAEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'i_ret_code_2' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>dbManager::registerTable</FUNCTION>
    <DECORATED>?registerTable@dbManager@@QAEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>dbManager::registerTable</FUNCTION>
    <DECORATED>?registerTable@dbManager@@QAEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'ret' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>dbManager::isTableExist</FUNCTION>
    <DECORATED>?isTableExist@dbManager@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AA_N@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>dbManager::isTableExist</FUNCTION>
    <DECORATED>?isTableExist@dbManager@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AA_N@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'i_database_op' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback</FUNCTION>
    <DECORATED>?sqlite3_callback@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'data' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback</FUNCTION>
    <DECORATED>?sqlite3_callback@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback</FUNCTION>
    <DECORATED>?sqlite3_callback@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'dbManager::sqlite3_callback' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback</FUNCTION>
    <DECORATED>?sqlite3_callback@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*argv)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback</FUNCTION>
    <DECORATED>?sqlite3_callback@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dbmanager.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*azColName)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback</FUNCTION>
    <DECORATED>?sqlite3_callback@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dbmanager.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26461</DEFECTCODE>
    <DESCRIPTION>The pointer argument 'argv' for function 'dbManager::sqlite3_callback_isTableExist' can be marked as a pointer to const (con.3).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'argv' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>100</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'i_handle' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>100</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'dbManager::sqlite3_callback_isTableExist' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>102</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(*argv)' in call to 'atoi' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dbmanager.cpp</FILENAME>
        <LINE>98</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*argv)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dbmanager.cpp</FILENAME>
        <LINE>98</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*azColName)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dbmanager.cpp</FILENAME>
        <LINE>98</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dbmanager.cpp</FILENAME>
      <LINE>102</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>dbManager::sqlite3_callback_isTableExist</FUNCTION>
    <DECORATED>?sqlite3_callback_isTableExist@dbManager@@SAHPAXHPAPAD1@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>