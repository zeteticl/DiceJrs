<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>6244</DEFECTCODE>
    <DESCRIPTION>“AuthCode”的局部声明遮蔽了此前位于“4”行(“c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp\cqapi.cpp”中)的声明。</DESCRIPTION>
    <FUNCTION>Initialize</FUNCTION>
    <DECORATED>Initialize@4</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>cqapi.cpp</FILENAME>
        <LINE>4</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'getAuthCode' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>getAuthCode</FUNCTION>
    <DECORATED>?getAuthCode@@YAHXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::getAuthCode' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::getAuthCode</FUNCTION>
    <DECORATED>?getAuthCode@CQ@@YAHXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>cqevebasic.h</FILENAME>
      <LINE>18</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'struct CQ::EVE', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>CQ::EVE::{dtor}</FUNCTION>
    <DECORATED>??1EVE@CQ@@UAE@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi_ex.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>CQ::StrangerInfo::{ctor}</FUNCTION>
    <DECORATED>??0StrangerInfo@CQ@@QAE@PBD@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi_ex.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>CQ::GroupMemberInfo::{ctor}</FUNCTION>
    <DECORATED>??0GroupMemberInfo@CQ@@QAE@PBD@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi_ex.cpp</FILENAME>
      <LINE>270</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>CQ::getGroupMemberList</FUNCTION>
    <DECORATED>?getGroupMemberList@CQ@@YA?AV?$vector@VGroupMemberInfo@CQ@@V?$allocator@VGroupMemberInfo@CQ@@@std@@@std@@_J@Z</DECORATED>
    <FUNCLINE>266</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi_ex.cpp</FILENAME>
      <LINE>268</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'data' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>CQ::getGroupMemberList</FUNCTION>
    <DECORATED>?getGroupMemberList@CQ@@YA?AV?$vector@VGroupMemberInfo@CQ@@V?$allocator@VGroupMemberInfo@CQ@@@std@@@std@@_J@Z</DECORATED>
    <FUNCLINE>266</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi_ex.cpp</FILENAME>
      <LINE>296</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'ID' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>CQ::getGroupList</FUNCTION>
    <DECORATED>?getGroupList@CQ@@YA?AV?$map@_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@_J@2@V?$allocator@U?$pair@$$CB_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@XZ</DECORATED>
    <FUNCLINE>284</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqapi_ex.cpp</FILENAME>
      <LINE>308</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::getlasterrmsg' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::getlasterrmsg</FUNCTION>
    <DECORATED>?getlasterrmsg@CQ@@YAPBDXZ</DECORATED>
    <FUNCLINE>308</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVE::message_ignore' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVE::message_ignore</FUNCTION>
    <DECORATED>?message_ignore@EVE@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVE::message_block' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVE::message_block</FUNCTION>
    <DECORATED>?message_block@EVE@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEMsg::isSystem' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEMsg::isSystem</FUNCTION>
    <DECORATED>?isSystem@EVEMsg@CQ@@QBE_NXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>20</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::Font::Font' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::Font::{ctor}</FUNCTION>
    <DECORATED>??0Font@CQ@@QAE@H@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEMsg::isUser' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEMsg::isUser</FUNCTION>
    <DECORATED>?isUser@EVEMsg@CQ@@QBE_NXZ</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>CQ::EVEGroupMsg::{dtor}</FUNCTION>
    <DECORATED>??1EVEGroupMsg@CQ@@UAE@XZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'struct CQ::EVEGroupMsg', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>CQ::EVEGroupMsg::{dtor}</FUNCTION>
    <DECORATED>??1EVEGroupMsg@CQ@@UAE@XZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEGroupMsg::isAnonymous' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEGroupMsg::isAnonymous</FUNCTION>
    <DECORATED>?isAnonymous@EVEGroupMsg@CQ@@QBE_NXZ</DECORATED>
    <FUNCLINE>53</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>CQ::EVEGroupMsg::getFromAnonymousInfo</FUNCTION>
    <DECORATED>?getFromAnonymousInfo@EVEGroupMsg@CQ@@QAEAAUAnonymousInfo@2@XZ</DECORATED>
    <FUNCLINE>56</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEPrivateMsg::fromPrivate' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEPrivateMsg::fromPrivate</FUNCTION>
    <DECORATED>?fromPrivate@EVEPrivateMsg@CQ@@QBE_NXZ</DECORATED>
    <FUNCLINE>126</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>129</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEPrivateMsg::fromOnlineStatus' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEPrivateMsg::fromOnlineStatus</FUNCTION>
    <DECORATED>?fromOnlineStatus@EVEPrivateMsg@CQ@@QBE_NXZ</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>132</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEPrivateMsg::fromGroup' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEPrivateMsg::fromGroup</FUNCTION>
    <DECORATED>?fromGroup@EVEPrivateMsg@CQ@@QBE_NXZ</DECORATED>
    <FUNCLINE>132</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>135</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEPrivateMsg::fromDiscuss' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEPrivateMsg::fromDiscuss</FUNCTION>
    <DECORATED>?fromDiscuss@EVEPrivateMsg@CQ@@QBE_NXZ</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEStatus::color_green' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEStatus::color_green</FUNCTION>
    <DECORATED>?color_green@EVEStatus@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEStatus::color_orange' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEStatus::color_orange</FUNCTION>
    <DECORATED>?color_orange@EVEStatus@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEStatus::color_red' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEStatus::color_red</FUNCTION>
    <DECORATED>?color_red@EVEStatus@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEStatus::color_crimson' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEStatus::color_crimson</FUNCTION>
    <DECORATED>?color_crimson@EVEStatus@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEStatus::color_black' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEStatus::color_black</FUNCTION>
    <DECORATED>?color_black@EVEStatus@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>159</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>160</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVEStatus::color_gray' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVEStatus::color_gray</FUNCTION>
    <DECORATED>?color_gray@EVEStatus@CQ@@QAEXXZ</DECORATED>
    <FUNCLINE>160</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26460</DEFECTCODE>
    <DESCRIPTION>The reference argument 'eve' for function 'CQ::statusEVEreturn' can be marked as const (con.3).</DESCRIPTION>
    <FUNCTION>CQ::statusEVEreturn</FUNCTION>
    <DECORATED>?statusEVEreturn@CQ@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAUEVEStatus@1@@Z</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>170</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::EVERequest::EVERequest' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::EVERequest::{ctor}</FUNCTION>
    <DECORATED>??0EVERequest@CQ@@QAE@H_JPBD1@Z</DECORATED>
    <FUNCLINE>170</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>cqeve_requestaddfriend.h</FILENAME>
      <LINE>39</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>cqeve_requestaddfriend.h</FILENAME>
      <LINE>40</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>cqeve_requestaddgroup.h</FILENAME>
      <LINE>45</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>cqeve_requestaddgroup.h</FILENAME>
      <LINE>46</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqeve.cpp</FILENAME>
      <LINE>209</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>CQ::AnonymousInfo::{ctor}</FUNCTION>
    <DECORATED>??0AnonymousInfo@CQ@@QAE@PBD@Z</DECORATED>
    <FUNCLINE>207</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqstream.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::logger::logger' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::logger::{ctor}</FUNCTION>
    <DECORATED>??0logger@CQ@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqstream.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::CQstream::clear' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::CQstream::clear</FUNCTION>
    <DECORATED>?clear@CQstream@CQ@@UAEXXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqstream.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'control' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>CQ::CQstream::&lt;&lt;</FUNCTION>
    <DECORATED>??6CQstream@CQ@@UAEAAV01@P6AXAAV01@@Z@Z</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqstream.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::CQstream::operator&lt;&lt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::CQstream::&lt;&lt;</FUNCTION>
    <DECORATED>??6CQstream@CQ@@UAEAAV01@P6AXAAV01@@Z@Z</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>bufstream.h</FILENAME>
      <LINE>36</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class CQ::CQstream', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>CQ::CQstream::{dtor}</FUNCTION>
    <DECORATED>??1CQstream@CQ@@UAE@XZ</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqstream.cpp</FILENAME>
      <LINE>127</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::logstream::logstream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::logstream::{ctor}</FUNCTION>
    <DECORATED>??0logstream@CQ@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqstream.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::msg::msg' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::msg::{ctor}</FUNCTION>
    <DECORATED>??0msg@CQ@@QAE@_JW4msgtype@1@@Z</DECORATED>
    <FUNCLINE>137</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqstream.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CQ::msg::msg' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CQ::msg::{ctor}</FUNCTION>
    <DECORATED>??0msg@CQ@@QAE@_JH@Z</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'base64_chars''</FUNCTION>
    <DECORATED>??__Ebase64_chars@@YAXXZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'is_base64' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>is_base64</FUNCTION>
    <DECORATED>?is_base64@@YA_NE@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'bytes_to_encode' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>27</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_4' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_3' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'j' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(bytes_to_encode++)'. 'bytes_to_encode' may have been invalidated at line 31 (lifetime.1).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>cqtools.cpp</FILENAME>
        <LINE>31</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>96</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>105</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'j' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_3' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_4' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>96</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>105</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'p' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>show</FUNCTION>
    <DECORATED>?show@@YAXPAXH@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>show</FUNCTION>
    <DECORATED>?show@@YAXPAXH@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'p' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>show</FUNCTION>
    <DECORATED>?show@@YAXPAXH@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'str' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Flip' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::setData</FUNCTION>
    <DECORATED>?setData@Unpack@@QAEAAV1@PBDH@Z</DECORATED>
    <FUNCLINE>46</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>unpack.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Unpack::{ctor}</FUNCTION>
    <DECORATED>??0Unpack@@QAE@XZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Unpack::clear' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Unpack::clear</FUNCTION>
    <DECORATED>?clear@Unpack@@QAEAAV1@XZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Unpack::len' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Unpack::len</FUNCTION>
    <DECORATED>?len@Unpack@@QBEHXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@H@Z</DECORATED>
    <FUNCLINE>80</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>92</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getInt</FUNCTION>
    <DECORATED>?getInt@Unpack@@QAEHXZ</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>92</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getInt</FUNCTION>
    <DECORATED>?getInt@Unpack@@QAEHXZ</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>100</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@_J@Z</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getLong</FUNCTION>
    <DECORATED>?getLong@Unpack@@QAE_JXZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getLong</FUNCTION>
    <DECORATED>?getLong@Unpack@@QAE_JXZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@F@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getshort</FUNCTION>
    <DECORATED>?getshort@Unpack@@QAEFXZ</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getshort</FUNCTION>
    <DECORATED>?getshort@Unpack@@QAEFXZ</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@PBEF@Z</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>163</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>163</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'allotemp.2'. '(temporary 2)' may have been invalidated at line 156 (lifetime.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>156</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>165</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'allotemp.4'. '(temporary 4)' may have been invalidated at line 165 (lifetime.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(151's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>156</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>165</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(151's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getstring</FUNCTION>
    <DECORATED>?getstring@Unpack@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getstring</FUNCTION>
    <DECORATED>?getstring@Unpack@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>toBin</FUNCTION>
    <DECORATED>??$toBin@H@@YAPAEAAH@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>874</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'what()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::exception::what</FUNCTION>
    <DECORATED>?what@exception@detail@nlohmann@@UBEPBDXZ</DECORATED>
    <FUNCLINE>872</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>881</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26434</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::exception::exception' hides a non-virtual function 'std::exception::exception' (c.128).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::exception::{ctor}</FUNCTION>
    <DECORATED>??0exception@detail@nlohmann@@IAE@HPBD@Z</DECORATED>
    <FUNCLINE>881</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::&lt;</FUNCTION>
    <DECORATED>??Mdetail@nlohmann@@YA_NW4value_t@01@0@Z</DECORATED>
    <FUNCLINE>1237</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::&lt;</FUNCTION>
    <DECORATED>??Mdetail@nlohmann@@YA_NW4value_t@01@0@Z</DECORATED>
    <FUNCLINE>1237</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::&lt;</FUNCTION>
    <DECORATED>??Mdetail@nlohmann@@YA_NW4value_t@01@0@Z</DECORATED>
    <FUNCLINE>1237</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2184</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'struct nlohmann::detail::input_adapter_protocol', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter_protocol::{dtor}</FUNCTION>
    <DECORATED>??1input_adapter_protocol@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2184</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2223</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_stream_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2223</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2227</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'rdstate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_stream_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2223</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2227</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'clear()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_stream_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2223</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2245</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'res' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_stream_adapter::get_character</FUNCTION>
    <DECORATED>?get_character@input_stream_adapter@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2243</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2265</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::{ctor}</FUNCTION>
    <DECORATED>??0input_buffer_adapter@detail@nlohmann@@QAE@PBDI@Z</DECORATED>
    <FUNCLINE>2264</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2279</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::get_character</FUNCTION>
    <DECORATED>?get_character@input_buffer_adapter@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2279</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(this-&gt;cursor++)'. '(*this).nlohmann::detail::input_buffer_adapter::cursor' may have been invalidated at line 2279 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::get_character</FUNCTION>
    <DECORATED>?get_character@input_buffer_adapter@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2275</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>2279</LINE>
        <COLUMN>54</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2273</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_buffer_adapter::{dtor}</FUNCTION>
    <DECORATED>??1input_buffer_adapter@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>2273</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2552</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::input_adapter::operator std::shared_ptr&lt;nlohmann::detail::input_adapter_protocol&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::operator class std::shared_ptr&lt;struct nlohmann::detail::input_adapter_protocol&gt;</FUNCTION>
    <DECORATED>??Binput_adapter@detail@nlohmann@@QAE?AV?$shared_ptr@Uinput_adapter_protocol@detail@nlohmann@@@std@@XZ</DECORATED>
    <FUNCLINE>2552</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10270</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent</FUNCTION>
    <DECORATED>?get_cached_power_for_binary_exponent@dtoa_impl@detail@nlohmann@@YA?AUcached_power@123@H@Z</DECORATED>
    <FUNCLINE>10117</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10270</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent</FUNCTION>
    <DECORATED>?get_cached_power_for_binary_exponent@dtoa_impl@detail@nlohmann@@YA?AUcached_power@123@H@Z</DECORATED>
    <FUNCLINE>10117</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10117</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent</FUNCTION>
    <DECORATED>?get_cached_power_for_binary_exponent@dtoa_impl@detail@nlohmann@@YA?AUcached_power@123@H@Z</DECORATED>
    <FUNCLINE>10117</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10281</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::find_largest_pow10' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::find_largest_pow10</FUNCTION>
    <DECORATED>?find_largest_pow10@dtoa_impl@detail@nlohmann@@YAHIAAI@Z</DECORATED>
    <FUNCLINE>10281</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10369</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_round</FUNCTION>
    <DECORATED>?grisu2_round@dtoa_impl@detail@nlohmann@@YAXPADH_K111@Z</DECORATED>
    <FUNCLINE>10337</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10337</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_round</FUNCTION>
    <DECORATED>?grisu2_round@dtoa_impl@detail@nlohmann@@YAXPADH_K111@Z</DECORATED>
    <FUNCLINE>10337</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10337</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::grisu2_round' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_round</FUNCTION>
    <DECORATED>?grisu2_round@dtoa_impl@detail@nlohmann@@YAXPADH_K111@Z</DECORATED>
    <FUNCLINE>10337</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10455</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10562</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10378</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buffer' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10411</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10455</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10474</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10490</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10562</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::grisu2_digit_gen</FUNCTION>
    <DECORATED>?grisu2_digit_gen@dtoa_impl@detail@nlohmann@@YAXPADAAH1Udiyfp@123@22@Z</DECORATED>
    <FUNCLINE>10378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10723</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10727</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10735</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10740</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10742</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10746</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10748</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10750</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10715</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10730</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10740</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10742</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10746</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10748</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10750</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10715</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::append_exponent' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10727</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10727 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10727</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10723</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10723 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10723</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10735</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10735 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10735</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10746</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10746 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10746</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10740</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10740 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10740</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10736 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10736</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10748</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10748 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10748</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10742</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10742 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10742</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10750</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10750 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10750</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10736</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10715's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::append_exponent</FUNCTION>
    <DECORATED>?append_exponent@dtoa_impl@detail@nlohmann@@YAPADPADH@Z</DECORATED>
    <FUNCLINE>10715</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10736</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10742</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10750</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10753</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10783</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10785</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10786</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10787</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10797</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10798</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10799</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10807</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10808</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10809</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10810</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10811</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10819</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10826</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10827</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10828</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10831</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10765</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'buf' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10783</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10797</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10807</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10810</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10826</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10831</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(buf++)'. 'buf' may have been invalidated at line 10831 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10831</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10832</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'buf' in call to 'nlohmann::detail::dtoa_impl::append_exponent' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10831</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10831</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10765's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::format_buffer</FUNCTION>
    <DECORATED>?format_buffer@dtoa_impl@detail@nlohmann@@YAPADPADHHHH@Z</DECORATED>
    <FUNCLINE>10765</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10831</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10832</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>20340</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'swap()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>std::swap</FUNCTION>
    <DECORATED>??$swap@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@X@std@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@0@Z</DECORATED>
    <FUNCLINE>20335</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>32</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'SkillNameReplace''</FUNCTION>
    <DECORATED>??__ESkillNameReplace@@YAXXZ</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>91</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,int&gt; &gt; &gt;::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,int&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'SkillDefaultVal''</FUNCTION>
    <DECORATED>??__ESkillDefaultVal@@YAXXZ</DECORATED>
    <FUNCLINE>188</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>194</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>195</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>196</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>197</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>198</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>199</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>200</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>201</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>202</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TempInsanity''</FUNCTION>
    <DECORATED>??__ETempInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>203</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>207</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>208</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>209</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>210</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>211</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>212</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>214</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>215</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>216</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>217</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LongInsanity''</FUNCTION>
    <DECORATED>??__ELongInsanity@@YAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>223</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>224</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>225</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>226</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>227</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>228</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>229</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>230</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>232</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>233</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>234</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>235</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>236</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>237</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>238</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>239</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>240</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>241</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>242</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>243</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>244</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>245</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>246</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>247</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>248</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>249</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>250</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>251</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>252</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>253</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>256</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>257</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>258</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>259</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>260</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>261</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>262</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>263</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>264</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>265</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>266</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>267</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>268</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>269</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>270</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>271</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>272</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>273</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>274</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>275</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>279</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>280</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>281</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>282</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>283</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>284</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>285</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>286</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>287</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>288</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>289</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>290</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>291</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>292</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>293</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>296</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>297</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>299</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>300</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>301</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>302</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>303</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>304</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>306</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>307</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>308</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>309</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>310</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>311</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>313</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>314</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>315</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>316</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>317</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>318</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>319</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>320</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>321</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>322</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFear''</FUNCTION>
    <DECORATED>??__EstrFear@@YAXXZ</DECORATED>
    <FUNCLINE>323</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>325</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>326</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>327</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>328</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>329</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>330</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>331</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>332</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>333</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>334</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>335</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>336</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>337</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>338</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>339</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>340</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>341</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>342</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>343</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>344</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>345</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>346</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>347</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>348</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>349</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>350</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>351</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>352</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>353</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>354</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>355</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>356</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>357</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>358</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>359</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>361</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>362</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>363</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>364</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>365</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>366</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>367</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>368</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>369</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>370</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>371</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>372</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>373</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>374</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>375</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>376</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>377</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>378</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>379</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>380</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>381</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>382</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>383</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>384</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>385</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>386</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>387</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>388</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>389</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>390</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>391</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>392</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>393</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>394</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>395</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>396</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>397</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>398</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>399</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>400</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>401</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>402</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>403</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>404</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>405</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>406</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>407</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>408</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>409</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>410</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>412</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>413</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>414</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>415</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>416</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>417</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>418</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>419</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>420</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>421</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>422</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>423</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>424</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rdconstant.h</FILENAME>
      <LINE>425</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strPanic''</FUNCTION>
    <DECORATED>??__EstrPanic@@YAXXZ</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>10</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Ver_Without_Build''</FUNCTION>
    <DECORATED>??__EDice_Ver_Without_Build@@YAXXZ</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DiceRequestHeader''</FUNCTION>
    <DECORATED>??__EDiceRequestHeader@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>12</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::to_string' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Ver''</FUNCTION>
    <DECORATED>??__EDice_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>12</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Ver''</FUNCTION>
    <DECORATED>??__EDice_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>12</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Ver''</FUNCTION>
    <DECORATED>??__EDice_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>12</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Ver''</FUNCTION>
    <DECORATED>??__EDice_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>13</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Short_Ver''</FUNCTION>
    <DECORATED>??__EDice_Short_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>14</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Head_Ver''</FUNCTION>
    <DECORATED>??__EDice_Head_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>14</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Head_Ver''</FUNCTION>
    <DECORATED>??__EDice_Head_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>15</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Full_Ver''</FUNCTION>
    <DECORATED>??__EDice_Full_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>16</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'Dice_Bot_Ver''</FUNCTION>
    <DECORATED>??__EDice_Bot_Ver@@YAXXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>19</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strHlpMsg''</FUNCTION>
    <DECORATED>??__EstrHlpMsg@@YAXXZ</DECORATED>
    <FUNCLINE>27</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>59</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strHlpMsgList''</FUNCTION>
    <DECORATED>??__EstrHlpMsgList@@YAXXZ</DECORATED>
    <FUNCLINE>59</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>71</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>72</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>73</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>75</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>76</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>78</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>79</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>80</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>81</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>82</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>83</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>84</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>85</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>86</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>87</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>88</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>90</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>91</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>92</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>93</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>94</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>96</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>98</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>99</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>100</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>101</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>102</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>103</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>105</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>106</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>107</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>108</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>109</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>110</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>111</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>112</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>114</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>115</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'tarotCard''</FUNCTION>
    <DECORATED>??__EtarotCard@@YAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>custommsg.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26460</DEFECTCODE>
    <DESCRIPTION>The reference argument 'in' for function 'ReadCustomMsg' can be marked as const (con.3).</DESCRIPTION>
    <FUNCTION>ReadCustomMsg</FUNCTION>
    <DECORATED>?ReadCustomMsg@@YAXAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11744</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::json_pointer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$json_pointer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@nlohmann@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>11744</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2421</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'fill_buffer&lt;4&gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_adapter&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt; &gt;::get_character</FUNCTION>
    <DECORATED>?get_character@?$wide_string_input_adapter@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@@detail@nlohmann@@UAEHXZ</DECORATED>
    <FUNCLINE>2416</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>17751</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::swap</FUNCTION>
    <DECORATED>?swap@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXAAV12@@Z</DECORATED>
    <FUNCLINE>17743</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14352</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::dump</FUNCTION>
    <DECORATED>?dump@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD_NW4error_handler_t@detail@2@@Z</DECORATED>
    <FUNCLINE>14342</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13375</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14287</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@XZ</DECORATED>
    <FUNCLINE>14284</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14284</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@XZ</DECORATED>
    <FUNCLINE>14284</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13398</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'destroy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13399</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13390</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'destroy&lt;std::vector&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;,std::allocator&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt; &gt; &gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13391</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13382</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'basic_string&lt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13383</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'deallocate()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::destroy</FUNCTION>
    <DECORATED>?destroy@json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEXW4value_t@detail@3@@Z</DECORATED>
    <FUNCLINE>13375</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>5787</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_object-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::set_end</FUNCTION>
    <DECORATED>?set_end@?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXXZ</DECORATED>
    <FUNCLINE>5773</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>5750</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_object-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::set_begin</FUNCTION>
    <DECORATED>?set_begin@?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXXZ</DECORATED>
    <FUNCLINE>5736</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>5715</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class nlohmann::detail::iter_impl&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt; &gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::iter_impl&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE@ABV012@@Z</DECORATED>
    <FUNCLINE>5715</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11148</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'val-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump</FUNCTION>
    <DECORATED>?dump@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAEXABV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@3@_N1II@Z</DECORATED>
    <FUNCLINE>10974</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4990</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26416</DEFECTCODE>
    <DESCRIPTION>Shared pointer parameter 'adapter' is passed by rvalue reference. Pass by value instead (r.34).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE@$$QAV?$shared_ptr@Uinput_adapter_protocol@detail@nlohmann@@@std@@V?$function@$$A6A_NHW4parse_event_t@?$parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@4@@Z@4@_N@Z</DECORATED>
    <FUNCLINE>4990</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>12195</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::json_pointer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::split</FUNCTION>
    <DECORATED>?split@?$json_pointer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@nlohmann@@CA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z</DECORATED>
    <FUNCLINE>12184</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>12230</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::json_pointer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::split</FUNCTION>
    <DECORATED>?split@?$json_pointer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@nlohmann@@CA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z</DECORATED>
    <FUNCLINE>12184</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>6436</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::output_adapter&lt;char,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::operator std::shared_ptr&lt;nlohmann::detail::output_adapter_protocol&lt;char&gt; &gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::output_adapter&lt;char,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::operator class std::shared_ptr&lt;struct nlohmann::detail::output_adapter_protocol&lt;char&gt; &gt;</FUNCTION>
    <DECORATED>??B?$output_adapter@DV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@nlohmann@@QAE?AV?$shared_ptr@U?$output_adapter_protocol@D@detail@nlohmann@@@std@@XZ</DECORATED>
    <FUNCLINE>6436</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14216</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;other-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@$$QAV01@@Z</DECORATED>
    <FUNCLINE>14214</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13563</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'adl_serializer&gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@$$T@Z</DECORATED>
    <FUNCLINE>13562</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3930</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cs': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_token_string</FUNCTION>
    <DECORATED>?get_token_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3920</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3931</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cs': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_token_string</FUNCTION>
    <DECORATED>?get_token_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3920</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3930</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_token_string</FUNCTION>
    <DECORATED>?get_token_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3920</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2670</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26416</DEFECTCODE>
    <DESCRIPTION>Shared pointer parameter 'adapter' is passed by rvalue reference. Pass by value instead (r.34).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE@$$QAV?$shared_ptr@Uinput_adapter_protocol@detail@nlohmann@@@std@@@Z</DECORATED>
    <FUNCLINE>2670</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11327</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11328</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11329</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11330</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11331</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11332</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11336</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11337</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11338</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11245</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11246</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11238</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11239</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11231</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11232</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11224</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11225</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11217</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11218</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11210</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11211</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11203</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11204</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11258</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11264</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11274</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11358</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11183</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'codepoint' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11258</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11264</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11193</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11327</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11328</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11329</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11330</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11331</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11332</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11336</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11337</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11338</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11302</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11245</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11246</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11238</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11239</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11231</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11232</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11224</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11225</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11217</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11218</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11210</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11211</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11203</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11204</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11274</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11274</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11358</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11358</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11383</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_escaped</FUNCTION>
    <DECORATED>?dump_escaped@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z</DECORATED>
    <FUNCLINE>11181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14263</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::=</FUNCTION>
    <DECORATED>??4?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEAAV01@V01@@Z</DECORATED>
    <FUNCLINE>14251</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14266</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'allotemp.2'. '(temporary 2)' may have been invalidated at line 14266 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::=</FUNCTION>
    <DECORATED>??4?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEAAV01@V01@@Z</DECORATED>
    <FUNCLINE>14251</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>14266</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14266</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(14251's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::=</FUNCTION>
    <DECORATED>??4?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAEAAV01@V01@@Z</DECORATED>
    <FUNCLINE>14251</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>14266</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13275</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13539</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@1@@Z</DECORATED>
    <FUNCLINE>13538</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13317</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13311</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13305</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13299</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::json_value::{ctor}</FUNCTION>
    <DECORATED>??0json_value@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@W4value_t@detail@2@@Z</DECORATED>
    <FUNCLINE>13275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2688</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'loc' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_decimal_point</FUNCTION>
    <DECORATED>?get_decimal_point@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CADXZ</DECORATED>
    <FUNCLINE>2686</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2688</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'loc' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_decimal_point</FUNCTION>
    <DECORATED>?get_decimal_point@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CADXZ</DECORATED>
    <FUNCLINE>2686</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11588</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>表达式“0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=400-1”对此调用无效。</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11568</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11588</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11588</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11594</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11588</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11594</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>11566</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11491</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'end' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_float</FUNCTION>
    <DECORATED>?dump_float@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXNU?$integral_constant@_N$00@std@@@Z</DECORATED>
    <FUNCLINE>11488</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11491</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_float</FUNCTION>
    <DECORATED>?dump_float@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXNU?$integral_constant@_N$00@std@@@Z</DECORATED>
    <FUNCLINE>11488</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11493</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_float</FUNCTION>
    <DECORATED>?dump_float@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXNU?$integral_constant@_N$00@std@@@Z</DECORATED>
    <FUNCLINE>11488</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3778</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_literal</FUNCTION>
    <DECORATED>?scan_literal@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@PBDIW44123@@Z</DECORATED>
    <FUNCLINE>3772</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3772</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'literal_text' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_literal</FUNCTION>
    <DECORATED>?scan_literal@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@PBDIW44123@@Z</DECORATED>
    <FUNCLINE>3772</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3733</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3749</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3473</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3459</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3453</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3507</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3567</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3560</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3554</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3571</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3493</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3531</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3524</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3591</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3624</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3655</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3640</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3682</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3708</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3712</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3617</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3628</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3535</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26438</DEFECTCODE>
    <DESCRIPTION>Avoid 'goto' (es.76).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::scan_number</FUNCTION>
    <DECORATED>?scan_number@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AW4token_type@123@XZ</DECORATED>
    <FUNCLINE>3438</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3796</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'push_back()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::reset</FUNCTION>
    <DECORATED>?reset@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEXXZ</DECORATED>
    <FUNCLINE>3792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2768</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2765</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2765</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'range' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2768</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(++range)'. 'range' may have been invalidated at line 2768 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::next_byte_in_range</FUNCTION>
    <DECORATED>?next_byte_in_range@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE_NV?$initializer_list@H@std@@@Z</DECORATED>
    <FUNCLINE>2760</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>2768</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>表达式“0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=64-1”对此调用无效。</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11429</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11435</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11436</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11438</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11443</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11444</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11445</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11438</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11443</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11444</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11445</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11438</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11448</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>11452</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11443</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11444</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>11452</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::dump_integer</FUNCTION>
    <DECORATED>??$dump_integer@_J$0A@@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEX_J@Z</DECORATED>
    <FUNCLINE>11426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13209</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'deleter' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@$$V@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@XZ</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(13204's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::create</FUNCTION>
    <DECORATED>??$create@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@$$V@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@CAPAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@@2@@std@@XZ</DECORATED>
    <FUNCLINE>13204</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>13216</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10857</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10862</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10864</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10865</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10848</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'first' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10862</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10862 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10862</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10857</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10857 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10864</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10864 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10864</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10865</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(first++)'. 'first' may have been invalidated at line 10865 (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10865</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10877</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'first' in call to 'nlohmann::detail::dtoa_impl::grisu2&lt;double&gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10890</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'first' in call to 'nlohmann::detail::dtoa_impl::format_buffer' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10865</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10848's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10865</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10866</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10857</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(10848's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_chars</FUNCTION>
    <DECORATED>??$to_chars@N@detail@nlohmann@@YAPADPADPBDN@Z</DECORATED>
    <FUNCLINE>10848</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10857</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>10890</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2357</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2363</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2368</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2373</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2374</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2379</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2380</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2381</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2388</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2390</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2391</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2392</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2393</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2400</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;wchar_t,std::char_traits&lt;wchar_t&gt;,std::allocator&lt;wchar_t&gt; &gt;,2&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$01@detail@nlohmann@@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2351</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2302</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2308</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2313</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2318</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2319</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2324</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2325</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2326</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2331</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2332</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2333</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2334</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2340</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::wide_string_input_helper&lt;std::basic_string&lt;char32_t,std::char_traits&lt;char32_t&gt;,std::allocator&lt;char32_t&gt; &gt;,4&gt;::fill_buffer</FUNCTION>
    <DECORATED>?fill_buffer@?$wide_string_input_helper@V?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$03@detail@nlohmann@@SAXABV?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@AAIAAV?$array@H$03@5@11@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4711</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::end_array</FUNCTION>
    <DECORATED>?end_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NXZ</DECORATED>
    <FUNCLINE>4705</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4729</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::end_array</FUNCTION>
    <DECORATED>?end_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NXZ</DECORATED>
    <FUNCLINE>4705</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4686</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_array</FUNCTION>
    <DECORATED>?start_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4690</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'val.second' in call to 'std::vector&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *,std::allocator&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *&gt; &gt;::push_back' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_array</FUNCTION>
    <DECORATED>?start_array@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4690</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4653</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::end_object</FUNCTION>
    <DECORATED>?end_object@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NXZ</DECORATED>
    <FUNCLINE>4649</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4637</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::key</FUNCTION>
    <DECORATED>?key@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4632</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4643</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::key</FUNCTION>
    <DECORATED>?key@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4632</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4613</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_object</FUNCTION>
    <DECORATED>?start_object@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4617</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'val.second' in call to 'std::vector&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *,std::allocator&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; *&gt; &gt;::push_back' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::start_object</FUNCTION>
    <DECORATED>?start_object@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NI@Z</DECORATED>
    <FUNCLINE>4610</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4617</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4450</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::key</FUNCTION>
    <DECORATED>?key@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4447</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>3902</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_string' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::get_string</FUNCTION>
    <DECORATED>?get_string@?$lexer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>3902</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>16975</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::max_size</FUNCTION>
    <DECORATED>?max_size@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QBEIXZ</DECORATED>
    <FUNCLINE>16962</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>18709</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE@ABV01@@Z</DECORATED>
    <FUNCLINE>14131</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13364</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13352</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13340</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13273</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13271</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13269</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>13267</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>16911</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::size</FUNCTION>
    <DECORATED>?size@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QBEIXZ</DECORATED>
    <FUNCLINE>16892</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2526</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::{ctor}</FUNCTION>
    <DECORATED>??$?0PBD$0A@@input_adapter@detail@nlohmann@@QAE@PBD0@Z</DECORATED>
    <FUNCLINE>2506</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2530</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26473</DEFECTCODE>
    <DESCRIPTION>Don't cast between pointer types where the source type and the target type are the same (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::input_adapter::{ctor}</FUNCTION>
    <DECORATED>??$?0PBD$0A@@input_adapter@detail@nlohmann@@QAE@PBD0@Z</DECORATED>
    <FUNCLINE>2506</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4801</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@W4value_t@detail@nlohmann@@@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@$$QAW4value_t@12@_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4827</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@W4value_t@detail@nlohmann@@@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAE?AU?$pair@_NPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@std@@$$QAW4value_t@12@_N@Z</DECORATED>
    <FUNCLINE>4786</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>16046</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::erase</FUNCTION>
    <DECORATED>??$erase@V?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@QAE?AV?$iter_impl@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@1@V231@@Z</DECORATED>
    <FUNCLINE>16002</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4532</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '(result.back)-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::handle_value</FUNCTION>
    <DECORATED>??$handle_value@W4value_t@detail@nlohmann@@@?$json_sax_dom_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@AAEPAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@$$QAW4value_t@12@@Z</DECORATED>
    <FUNCLINE>4520</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>6347</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'struct nlohmann::detail::output_adapter_protocol&lt;char&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::output_adapter_protocol&lt;char&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$output_adapter_protocol@D@detail@nlohmann@@UAE@XZ</DECORATED>
    <FUNCLINE>6347</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>10007</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::compute_boundaries</FUNCTION>
    <DECORATED>??$compute_boundaries@N@dtoa_impl@detail@nlohmann@@YA?AUboundaries@012@N@Z</DECORATED>
    <FUNCLINE>9978</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>9837</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'nlohmann::detail::dtoa_impl::reinterpret_bits&lt;unsigned __int64,double&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::dtoa_impl::reinterpret_bits</FUNCTION>
    <DECORATED>??$reinterpret_bits@_KN@dtoa_impl@detail@nlohmann@@YA_KN@Z</DECORATED>
    <FUNCLINE>9837</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14785</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol 'this-&gt;m_value' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt;::get_impl_ptr</FUNCTION>
    <DECORATED>?get_impl_ptr@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@ABEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBV34@@Z</DECORATED>
    <FUNCLINE>14783</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2023</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_json</FUNCTION>
    <DECORATED>??$to_json@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@_K$0A@@detail@nlohmann@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@1@_K@Z</DECORATED>
    <FUNCLINE>2021</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>2030</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::to_json</FUNCTION>
    <DECORATED>??$to_json@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@_J$0A@@detail@nlohmann@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@1@_J@Z</DECORATED>
    <FUNCLINE>2028</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1841</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;3&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$02@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>1838</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1871</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;7&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$06@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@N@Z</DECORATED>
    <FUNCLINE>1868</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1883</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;6&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$05@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_K@Z</DECORATED>
    <FUNCLINE>1880</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1895</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;5&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$04@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_J@Z</DECORATED>
    <FUNCLINE>1892</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>1829</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26476</DEFECTCODE>
    <DESCRIPTION>Expression/symbol '&amp;allotemp.1' uses a naked union 'union nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer&gt;::json_value' with multiple type pointers: Use variant instead (type.7).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::external_constructor&lt;4&gt;::construct</FUNCTION>
    <DECORATED>??$construct@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@?$external_constructor@$03@detail@nlohmann@@SAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@2@_N@Z</DECORATED>
    <FUNCLINE>1826</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>49</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'intTmpResOnce' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>90</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'intTmpSum' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'intTmpRollRes' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>156</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'intTmpRollRes' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>232</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'intTmpResOnce' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>25</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>31</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>76</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>66</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>70</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>102</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>108</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>120</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>125</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>128</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>129</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>139</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>145</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>157</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>162</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>165</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>166</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>269</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>24</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L0'. '&lt;begin&gt;$L0' may have been invalidated at line 24 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>24</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L3'. '&lt;begin&gt;$L3' may have been invalidated at line 179 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>74</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L2'. '&lt;begin&gt;$L2' may have been invalidated at line 74 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>74</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>30</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L1'. '&lt;begin&gt;$L1' may have been invalidated at line 30 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::RollDice</FUNCTION>
    <DECORATED>?RollDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>30</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>287</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intSum' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>RD::MaxDice</FUNCTION>
    <DECORATED>?MaxDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>284</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>307</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L2'. '&lt;begin&gt;$L2' may have been invalidated at line 307 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::MaxDice</FUNCTION>
    <DECORATED>?MaxDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>284</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>307</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>291</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L0'. '&lt;begin&gt;$L0' may have been invalidated at line 291 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::MaxDice</FUNCTION>
    <DECORATED>?MaxDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>284</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>291</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L1'. '&lt;begin&gt;$L1' may have been invalidated at line 298 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::MaxDice</FUNCTION>
    <DECORATED>?MaxDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>284</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>298</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>324</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intSum' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>RD::MinDice</FUNCTION>
    <DECORATED>?MinDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>321</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>337</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L1'. '&lt;begin&gt;$L1' may have been invalidated at line 337 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::MinDice</FUNCTION>
    <DECORATED>?MinDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>321</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>337</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>328</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L0'. '&lt;begin&gt;$L0' may have been invalidated at line 328 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::MinDice</FUNCTION>
    <DECORATED>?MinDice@RD@@ABEHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>321</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>328</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>376</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isdigit”。</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>370</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>371</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>371</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>373</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>376</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>376</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>376</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>377</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>407</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>357</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L0'. '&lt;begin&gt;$L0' may have been invalidated at line 357 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>355</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>357</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>431</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isdigit”。</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>425</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>426</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>426</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>428</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>431</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>431</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>431</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>432</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>465</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>412</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L0'. '&lt;begin&gt;$L0' may have been invalidated at line 412 (lifetime.1).</DESCRIPTION>
    <FUNCTION>RD::{ctor}</FUNCTION>
    <DECORATED>??0RD@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@Z</DECORATED>
    <FUNCLINE>410</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>rd.h</FILENAME>
        <LINE>412</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>485</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Roll</FUNCTION>
    <DECORATED>?Roll@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>476</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>492</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Roll</FUNCTION>
    <DECORATED>?Roll@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>476</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>492</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Roll</FUNCTION>
    <DECORATED>?Roll@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>476</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>504</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Roll</FUNCTION>
    <DECORATED>?Roll@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>476</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intRDRes' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>RD::Max</FUNCTION>
    <DECORATED>?Max@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>515</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>521</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Max</FUNCTION>
    <DECORATED>?Max@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>515</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>528</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Max</FUNCTION>
    <DECORATED>?Max@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>515</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>528</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Max</FUNCTION>
    <DECORATED>?Max@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>515</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>540</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Max</FUNCTION>
    <DECORATED>?Max@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>515</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>555</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intRDRes' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>RD::Min</FUNCTION>
    <DECORATED>?Min@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>551</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>557</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Min</FUNCTION>
    <DECORATED>?Min@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>551</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>564</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Min</FUNCTION>
    <DECORATED>?Min@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>551</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>564</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Min</FUNCTION>
    <DECORATED>?Min@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>551</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>576</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::Min</FUNCTION>
    <DECORATED>?Min@RD@@QBEHXZ</DECORATED>
    <FUNCLINE>551</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>592</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>595</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>608</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>619</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>621</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>627</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>629</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>630</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>634</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>644</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>649</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>650</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>597</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>605</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringSeparate</FUNCTION>
    <DECORATED>?FormStringSeparate@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.h</FILENAME>
      <LINE>667</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>RD::FormStringCombined</FUNCTION>
    <DECORATED>?FormStringCombined@RD@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>661</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>initlist.h</FILENAME>
      <LINE>16</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'INIT::INIT' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>INIT::{ctor}</FUNCTION>
    <DECORATED>??0INIT@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>initlist.h</FILENAME>
      <LINE>20</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'INIT::operator&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>INIT::&gt;</FUNCTION>
    <DECORATED>??OINIT@@QBE_NU0@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>strip</FUNCTION>
    <DECORATED>?strip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>strip</FUNCTION>
    <DECORATED>?strip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;__int64,FATE,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,FATE&gt; &gt; &gt;::map&lt;__int64,FATE,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,FATE&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'JRFATE''</FUNCTION>
    <DECORATED>??__EJRFATE@@YAXXZ</DECORATED>
    <FUNCLINE>71</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>72</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;__int64,int,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,int&gt; &gt; &gt;::map&lt;__int64,int,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,int&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DefaultDice''</FUNCTION>
    <DECORATED>??__EDefaultDice@@YAXXZ</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;__int64,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map&lt;__int64,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'WelcomeMsg''</FUNCTION>
    <DECORATED>??__EWelcomeMsg@@YAXXZ</DECORATED>
    <FUNCLINE>73</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;__int64,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map&lt;__int64,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'LogMsg''</FUNCTION>
    <DECORATED>??__ELogMsg@@YAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'EnableLogGroup''</FUNCTION>
    <DECORATED>??__EEnableLogGroup@@YAXXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledGroup''</FUNCTION>
    <DECORATED>??__EDisabledGroup@@YAXXZ</DECORATED>
    <FUNCLINE>76</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledDiscuss''</FUNCTION>
    <DECORATED>??__EDisabledDiscuss@@YAXXZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledJRRPGroup''</FUNCTION>
    <DECORATED>??__EDisabledJRRPGroup@@YAXXZ</DECORATED>
    <FUNCLINE>78</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledJRRPDiscuss''</FUNCTION>
    <DECORATED>??__EDisabledJRRPDiscuss@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledJRFATEGroup''</FUNCTION>
    <DECORATED>??__EDisabledJRFATEGroup@@YAXXZ</DECORATED>
    <FUNCLINE>80</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledJRFATEDiscuss''</FUNCTION>
    <DECORATED>??__EDisabledJRFATEDiscuss@@YAXXZ</DECORATED>
    <FUNCLINE>81</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledMEGroup''</FUNCTION>
    <DECORATED>??__EDisabledMEGroup@@YAXXZ</DECORATED>
    <FUNCLINE>82</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledMEDiscuss''</FUNCTION>
    <DECORATED>??__EDisabledMEDiscuss@@YAXXZ</DECORATED>
    <FUNCLINE>83</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledHELPGroup''</FUNCTION>
    <DECORATED>??__EDisabledHELPGroup@@YAXXZ</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledHELPDiscuss''</FUNCTION>
    <DECORATED>??__EDisabledHELPDiscuss@@YAXXZ</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledOBGroup''</FUNCTION>
    <DECORATED>??__EDisabledOBGroup@@YAXXZ</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>87</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DisabledOBDiscuss''</FUNCTION>
    <DECORATED>??__EDisabledOBDiscuss@@YAXXZ</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'BanFriendList''</FUNCTION>
    <DECORATED>??__EBanFriendList@@YAXXZ</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;::set&lt;__int64,std::less&lt;__int64&gt;,std::allocator&lt;__int64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'BanGroupList''</FUNCTION>
    <DECORATED>??__EBanGroupList@@YAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'SourceType::SourceType' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>SourceType::{ctor}</FUNCTION>
    <DECORATED>??0SourceType@@QAE@_JH0@Z</DECORATED>
    <FUNCLINE>94</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>101</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'SourceType::operator&lt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>SourceType::&lt;</FUNCTION>
    <DECORATED>??MSourceType@@QBE_NU0@@Z</DECORATED>
    <FUNCLINE>101</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>108</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;SourceType,std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,int&gt; &gt; &gt;,std::less&lt;SourceType&gt;,std::allocator&lt;std::pair&lt;SourceType const ,std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,int&gt; &gt; &gt; &gt; &gt; &gt;::map&lt;SourceType,std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,int&gt; &gt; &gt;,std::less&lt;SourceType&gt;,std::allocator&lt;std::pair&lt;SourceType const ,std::ma' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'CharacterProp''</FUNCTION>
    <DECORATED>??__ECharacterProp@@YAXXZ</DECORATED>
    <FUNCLINE>108</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::multimap&lt;__int64,__int64,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,__int64&gt; &gt; &gt;::multimap&lt;__int64,__int64,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,__int64&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'ObserveGroup''</FUNCTION>
    <DECORATED>??__EObserveGroup@@YAXXZ</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::multimap&lt;__int64,__int64,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,__int64&gt; &gt; &gt;::multimap&lt;__int64,__int64,std::less&lt;__int64&gt;,std::allocator&lt;std::pair&lt;__int64 const ,__int64&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'ObserveDiscuss''</FUNCTION>
    <DECORATED>??__EObserveDiscuss@@YAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>111</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'strFileLoc''</FUNCTION>
    <DECORATED>??__EstrFileLoc@@YAXXZ</DECORATED>
    <FUNCLINE>111</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>389</LINE>
      <COLUMN>125</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function '&lt;lambda_def1a559f526e99d250183749e29003a&gt;::operator()' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg::&lt;lambda_def1a559f526e99d250183749e29003a&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_def1a559f526e99d250183749e29003a&gt;@@QBEHE@Z</DECORATED>
    <FUNCLINE>389</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isspace”。</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>574</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isdigit”。</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>581</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isdigit”。</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>613</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isdigit”。</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>392</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>430</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>637</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>700</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>721</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>383</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>385</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>399</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>416</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>419</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>421</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>424</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>471</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>473</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>476</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>478</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>504</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>507</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>509</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>535</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>537</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>539</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>542</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>544</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>574</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>576</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>598</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>601</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>603</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>606</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>684</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>687</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>689</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>692</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>745</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>749</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>754</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>759</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>116</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>156</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>196</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>236</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>107</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>147</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>187</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>227</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>265</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>305</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>345</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>385</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>763</LINE>
      <COLUMN>425</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>771</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>392</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '(temporary 6)' in call to 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>392</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>483</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 28)' in call to 'AddMsgToQueue' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>483</LINE>
        <COLUMN>48</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>514</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 35)' in call to 'AddMsgToQueue' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>514</LINE>
        <COLUMN>48</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>428</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L0'. '&lt;begin&gt;$L0' may have been invalidated at line 428 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventPrivateMsg</FUNCTION>
    <DECORATED>?eventPrivateMsg@@YAXAAUEVEPrivateMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>428</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>936</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'tep.fromAnonymousToken' in call to 'eventGroupMsg' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>eventGroupMsg@36</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>936</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>960</LINE>
      <COLUMN>125</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function '&lt;lambda_ffa4fd222fbd5928ca0f76c7bc3c7f60&gt;::operator()' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>eventGroupMsg::&lt;lambda_ffa4fd222fbd5928ca0f76c7bc3c7f60&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_ffa4fd222fbd5928ca0f76c7bc3c7f60&gt;@@QBEHE@Z</DECORATED>
    <FUNCLINE>960</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1926</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isspace”。</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2007</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isdigit”。</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1987</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'iFATE' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2113</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'res' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>963</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1819</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression '+ "\x65465,SMiY"': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1832</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression '+ "\x65465,SMiY"': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1843</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression '+ "\x65465,SMiY"': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1979</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cstrDate': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1980</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cstrDate': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1982</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1988</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cstrDate': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1990</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1996</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1490</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1872</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intCurrentVal' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2251</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2394</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intSkillVal' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2462</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intSkillVal' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>940</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>954</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>956</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>976</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>979</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>980</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>982</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>985</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1044</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1047</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1049</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1068</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1128</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1159</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1178</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1181</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1182</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1184</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1203</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1206</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1207</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1209</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1236</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1237</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1237</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1237</LINE>
      <COLUMN>134</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1240</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1244</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1244</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1245</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1247</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1249</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1258</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1258</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1272</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1274</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1274</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1276</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1278</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1280</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1282</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1284</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1287</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1346</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1359</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1363</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1369</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1374</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1378</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1381</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1381</LINE>
      <COLUMN>107</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1382</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1382</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1382</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1384</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1384</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1386</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1386</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1386</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1392</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1631</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1753</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1757</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1760</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1762</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1854</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1857</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1857</LINE>
      <COLUMN>168</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1860</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1864</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1867</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1869</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1926</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1982</LINE>
      <COLUMN>105</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1990</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>1996</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2002</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2061</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2147</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2178</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2243</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2246</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2272</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2274</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2277</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2279</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2305</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2308</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2310</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2336</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2338</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2340</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2343</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2345</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2372</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2373</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2374</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2374</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2374</LINE>
      <COLUMN>133</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2377</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2381</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2381</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2381</LINE>
      <COLUMN>139</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2384</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2386</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2389</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2440</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2441</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2442</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2442</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2442</LINE>
      <COLUMN>133</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2445</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2449</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2449</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2449</LINE>
      <COLUMN>139</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2452</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2457</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2504</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2504</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2507</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2511</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2516</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2521</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2527</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2530</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2530</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2531</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2531</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2531</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2533</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2535</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2535</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2536</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2536</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2536</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2538</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2538</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2540</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2540</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2540</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2548</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>963</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '(temporary 16)' in call to 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>963</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 17)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventGroupMsg</FUNCTION>
    <DECORATED>?eventGroupMsg@@YAXAAUEVEGroupMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>936</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>969</LINE>
        <COLUMN>52</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2790</LINE>
      <COLUMN>125</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function '&lt;lambda_2a8e34cbf00ab8667f032cdcc1908502&gt;::operator()' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg::&lt;lambda_2a8e34cbf00ab8667f032cdcc1908502&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_2a8e34cbf00ab8667f032cdcc1908502&gt;@@QBEHE@Z</DECORATED>
    <FUNCLINE>2790</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3634</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isspace”。</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3702</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6330</DEFECTCODE>
    <DESCRIPTION>已将“char”作为 _Param_(1) 传递，但需要使用“unsigned char”来调用“isdigit”。</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3682</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'iFATE' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3794</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'res' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2793</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3524</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression '+ "\x65465,SMiY"': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3539</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression '+ "\x65465,SMiY"': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3551</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression '+ "\x65465,SMiY"': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3673</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cstrDate': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3674</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cstrDate': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3676</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3683</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'cstrDate': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3685</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3691</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3212</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3581</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intCurrentVal' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3918</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4061</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intSkillVal' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4129</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intSkillVal' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2782</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2785</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2800</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2803</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2804</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2806</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2809</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2855</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2858</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2860</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2872</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2886</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2905</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2908</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2909</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2911</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2930</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2933</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2934</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2936</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2963</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2964</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2964</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2964</LINE>
      <COLUMN>134</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2967</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2971</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2971</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2972</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2974</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2976</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2985</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2985</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2999</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3001</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3001</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3003</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3005</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3007</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3009</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3011</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3014</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3073</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3086</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3090</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3096</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3101</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3105</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3108</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3108</LINE>
      <COLUMN>107</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3109</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3109</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3109</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3111</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3111</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3113</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3113</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3113</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3119</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3350</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3451</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3455</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3458</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3460</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3563</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3566</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3566</LINE>
      <COLUMN>168</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3569</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3573</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3576</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3578</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3634</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3676</LINE>
      <COLUMN>105</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3685</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3691</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3697</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3756</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3828</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3859</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3910</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3913</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3939</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3941</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3944</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3946</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3972</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3975</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>3977</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4003</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4005</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4007</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4010</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4012</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4039</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4040</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4041</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4041</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4041</LINE>
      <COLUMN>133</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4044</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4048</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4048</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4048</LINE>
      <COLUMN>139</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4051</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4053</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4056</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4107</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4108</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4109</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4109</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4109</LINE>
      <COLUMN>133</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4112</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4116</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4116</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4116</LINE>
      <COLUMN>139</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4119</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4121</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4124</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4171</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4171</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4174</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4178</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4183</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4188</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4194</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4197</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4197</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4198</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4198</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4198</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4200</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4202</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4202</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4203</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4203</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4203</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4205</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4205</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4207</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4207</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4207</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4215</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>2793</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '(temporary 13)' in call to 'std::operator+&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDiscussMsg</FUNCTION>
    <DECORATED>?eventDiscussMsg@@YAXAAUEVEDiscussMsg@CQ@@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>2793</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4513</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4513</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4515</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4513</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4515</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4515's result)' may have been invalidated at line 4513 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4513</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4515</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4513</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4513</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4520</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4520</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4522</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4520</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4522</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4522's result)' may have been invalidated at line 4520 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4520</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4522</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4520</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4520</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4528</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4528</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4530</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4528</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4530</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4530's result)' may have been invalidated at line 4528 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4528</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4530</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4528</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4528</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4535</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4535</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4537</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4535</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4537</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4537's result)' may have been invalidated at line 4535 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4535</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4537</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4535</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4535</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4543</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4543</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4545</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4543</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4545</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4545's result)' may have been invalidated at line 4543 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4543</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4545</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4543</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4543</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4550</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4550</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4552</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4550</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4552</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4552's result)' may have been invalidated at line 4550 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4550</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4552</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4550</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4550</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4557</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4557</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4559</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4557</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4559</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4559's result)' may have been invalidated at line 4557 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4557</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4559</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4557</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4557</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4564</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4564</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4566</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4564</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4566</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4566's result)' may have been invalidated at line 4564 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4564</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4566</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4564</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4564</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4573</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4573</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4575</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4573</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4575</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4575's result)' may have been invalidated at line 4573 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4573</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4575</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4573</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4573</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4581</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4581</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4583</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4581</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4583</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4583's result)' may have been invalidated at line 4581 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4581</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4583</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4581</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4581</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4587</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4587</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4589</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4587</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4589</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4589's result)' may have been invalidated at line 4587 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4587</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4589</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4587</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4587</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4594</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4594</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4596</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4594</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4596</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4596's result)' may have been invalidated at line 4594 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4594</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4596</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4594</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventDisable</FUNCTION>
    <DECORATED>eventDisable@0</DECORATED>
    <FUNCLINE>4507</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4594</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4691</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4691</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4693</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4691</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4693</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4693's result)' may have been invalidated at line 4691 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4691</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4693</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4691</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4691</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4698</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4698</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4700</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4698</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4700</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4700's result)' may have been invalidated at line 4698 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4698</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4700</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4698</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4698</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4706</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4706</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4708</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4706</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4708</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4708's result)' may have been invalidated at line 4706 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4706</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4708</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4706</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4706</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4713</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4713</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4715</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4713</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4715</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4715's result)' may have been invalidated at line 4713 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4713</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4715</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4713</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4713</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4720</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4720</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4722</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4720</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4722</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4722's result)' may have been invalidated at line 4720 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4720</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4722</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4720</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4720</LINE>
        <COLUMN>58</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4728</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4728</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4730</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4728</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4730</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4730's result)' may have been invalidated at line 4728 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4728</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4730</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4728</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4728</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4736</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4736</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4738</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4736</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4738</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4738's result)' may have been invalidated at line 4736 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4736</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4738</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4736</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4736</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4743</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4743</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4745</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4743</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4745</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4745's result)' may have been invalidated at line 4743 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4743</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4745</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4743</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4743</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4750</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4750</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4752</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4750</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4752</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4752's result)' may have been invalidated at line 4750 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4750</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4752</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4750</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4750</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4757</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4757</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4759</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4757</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4759</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4759's result)' may have been invalidated at line 4757 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4757</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4759</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4757</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4757</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4764</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4764</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4766</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4764</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4766</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4766's result)' may have been invalidated at line 4764 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4764</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4766</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4764</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4764</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4771</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator!=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4771</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4773</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator*' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4771</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4773</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.*'. '(*:4773's result)' may have been invalidated at line 4771 (lifetime.1).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4771</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4773</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicejrs.cpp</FILENAME>
      <LINE>4771</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'it' in call to 'std::_Tree_const_iterator&lt;std::_Tree_val&lt;std::_Tree_simple_types&lt;__int64&gt; &gt; &gt;::operator++' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>eventExit</FUNCTION>
    <DECORATED>eventExit@0</DECORATED>
    <FUNCLINE>4684</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicejrs.cpp</FILENAME>
        <LINE>4771</LINE>
        <COLUMN>66</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>jrs.h</FILENAME>
      <LINE>66</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FATE::FATEVal' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FATE::{ctor}</FUNCTION>
    <DECORATED>??0FATE@@QAE@XZ</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicemsgsend.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'msg_t::msg_t' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>msg_t::{ctor}</FUNCTION>
    <DECORATED>??0msg_t@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J_N@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicemsgsend.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::queue&lt;msg_t,std::deque&lt;msg_t,std::allocator&lt;msg_t&gt; &gt; &gt;::queue&lt;msg_t,std::deque&lt;msg_t,std::allocator&lt;msg_t&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'msgQueue''</FUNCTION>
    <DECORATED>??__EmsgQueue@@YAXXZ</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicemsgsend.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::mutex::mutex' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'msgQueueMutex''</FUNCTION>
    <DECORATED>??__EmsgQueueMutex@@YAXXZ</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicemsgsend.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '@msgQueue' in call to 'msg_t::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>SendMsg</FUNCTION>
    <DECORATED>?SendMsg@@YAXXZ</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicemsgsend.cpp</FILENAME>
        <LINE>47</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'szFormatBuffer': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'szFormatBuffer': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'szFormatBuffer' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>65</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 9)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>65</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 8)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>44</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 6)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::getLastErrorMsg</FUNCTION>
    <DECORATED>?getLastErrorMsg@Network@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>44</LINE>
        <COLUMN>45</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>使用未初始化的内存“dwRetCode”。</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>71</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>72</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>74</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>75</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>76</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>77</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>80</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>82</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>未初始化“dwRetCode”</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已使用“dwRetCode”，但可能尚未将其初始化</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'acceptTypes': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>136</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>136</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'dwRetCode' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>111</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 9)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>111</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 4)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>94</LINE>
        <COLUMN>49</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>135</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 13)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::POST</FUNCTION>
    <DECORATED>?POST@Network@@YA_NPBD0GPADAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>135</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>使用未初始化的内存“dwRetCode”。</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>171</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>173</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>174</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>175</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>176</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>179</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>181</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>未初始化“dwRetCode”</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>182</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>183</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已使用“dwRetCode”，但可能尚未将其初始化</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>175</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'acceptTypes': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>216</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>216</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>251</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>251</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>225</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>225</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>247</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>247</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>181</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'dwRetCode' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>210</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 9)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>210</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>193</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 4)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>193</LINE>
        <COLUMN>49</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dicenetwork.cpp</FILENAME>
      <LINE>234</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 13)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Network::GET</FUNCTION>
    <DECORATED>?GET@Network@@YA_NPBD0GAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>dicenetwork.cpp</FILENAME>
        <LINE>234</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>dllmain.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DllMain' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DllMain</FUNCTION>
    <DECORATED>DllMain@12</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26403</DEFECTCODE>
    <DESCRIPTION>Reset or explicitly delete an owner&lt;T&gt; pointer 'str1' (r.3).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>12</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>11</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>10</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>9</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>8</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>6</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26403</DEFECTCODE>
    <DESCRIPTION>Reset or explicitly delete an owner&lt;T&gt; pointer 'str2' (r.3).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>14</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>13</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>12</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>11</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>10</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>9</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>8</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>6</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26407</DEFECTCODE>
    <DESCRIPTION>Prefer scoped objects, don't heap-allocate unnecessarily (r.5).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26407</DEFECTCODE>
    <DESCRIPTION>Prefer scoped objects, don't heap-allocate unnecessarily (r.5).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>GBKtoUTF8</FUNCTION>
    <DECORATED>?GBKtoUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26403</DEFECTCODE>
    <DESCRIPTION>Reset or explicitly delete an owner&lt;T&gt; pointer 'wszGBK' (r.3).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>26</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>25</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>23</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>22</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>20</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26403</DEFECTCODE>
    <DESCRIPTION>Reset or explicitly delete an owner&lt;T&gt; pointer 'szGBK' (r.3).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>28</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>27</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>26</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>25</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>23</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>22</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>encodingconvert.cpp</FILENAME>
        <LINE>20</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26407</DEFECTCODE>
    <DESCRIPTION>Prefer scoped objects, don't heap-allocate unnecessarily (r.5).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26407</DEFECTCODE>
    <DESCRIPTION>Prefer scoped objects, don't heap-allocate unnecessarily (r.5).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>UTF8toGBK</FUNCTION>
    <DECORATED>?UTF8toGBK@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>The function 'ToHex' could be marked constexpr if compile-time evaluation is desired (f.4).</DESCRIPTION>
    <FUNCTION>ToHex</FUNCTION>
    <DECORATED>?ToHex@@YAEE@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>encodingconvert.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ToHex' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ToHex</FUNCTION>
    <DECORATED>?ToHex@@YAEE@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>globalvar.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DiceLogger''</FUNCTION>
    <DECORATED>??__EDiceLogger@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>globalvar.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'CQ::logger::logger' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DiceLogger''</FUNCTION>
    <DECORATED>??__EDiceLogger@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>globalvar.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'GlobalMsg''</FUNCTION>
    <DECORATED>??__EGlobalMsg@@YAXXZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>initlist.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '(temporary 2)' in call to 'std::sort&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;INIT&gt; &gt; &gt;,std::greater&lt;void&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>Initlist::show</FUNCTION>
    <DECORATED>?show@Initlist@@QAEX_JAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>initlist.cpp</FILENAME>
        <LINE>40</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>storagebase.h</FILENAME>
      <LINE>14</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class StorageBase', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>StorageBase::{dtor}</FUNCTION>
    <DECORATED>??1StorageBase@@UAE@XZ</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>initlist.cpp</FILENAME>
      <LINE>93</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class Initlist', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>Initlist::{dtor}</FUNCTION>
    <DECORATED>??1Initlist@@UAE@XZ</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>initlist.cpp</FILENAME>
      <LINE>95</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'save()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>Initlist::{dtor}</FUNCTION>
    <DECORATED>??1Initlist@@UAE@XZ</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>namestorage.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'NameStorage::clear' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>NameStorage::clear</FUNCTION>
    <DECORATED>?clear@NameStorage@@QAEXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>namestorage.cpp</FILENAME>
      <LINE>72</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class NameStorage', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>NameStorage::{dtor}</FUNCTION>
    <DECORATED>??1NameStorage@@UAE@XZ</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>namestorage.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'save()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>NameStorage::{dtor}</FUNCTION>
    <DECORATED>??1NameStorage@@UAE@XZ</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>randomgenerator.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>RandomGenerator::GetCycleCount</FUNCTION>
    <DECORATED>?GetCycleCount@RandomGenerator@@YA_KXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>randomgenerator.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'RandomGenerator::GetCycleCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>RandomGenerator::GetCycleCount</FUNCTION>
    <DECORATED>?GetCycleCount@RandomGenerator@@YA_KXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>randomgenerator.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'dis' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>RandomGenerator::Randint</FUNCTION>
    <DECORATED>?Randint@RandomGenerator@@YAHHH@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>randomgenerator.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>RandomGenerator::Randint</FUNCTION>
    <DECORATED>?Randint@RandomGenerator@@YAHHH@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>init2</FUNCTION>
    <DECORATED>?init2@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>COC7</FUNCTION>
    <DECORATED>?COC7@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>64</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>COC7</FUNCTION>
    <DECORATED>?COC7@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>64</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>COC7</FUNCTION>
    <DECORATED>?COC7@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>COC6</FUNCTION>
    <DECORATED>?COC6@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>COC6</FUNCTION>
    <DECORATED>?COC6@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>COC6</FUNCTION>
    <DECORATED>?COC6@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DND</FUNCTION>
    <DECORATED>?DND@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DND</FUNCTION>
    <DECORATED>?DND@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>122</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>TempInsane</FUNCTION>
    <DECORATED>?TempInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>119</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>127</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>TempInsane</FUNCTION>
    <DECORATED>?TempInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>119</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>TempInsane</FUNCTION>
    <DECORATED>?TempInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>119</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>122</LINE>
      <COLUMN>91</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>TempInsane</FUNCTION>
    <DECORATED>?TempInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>119</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>127</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>TempInsane</FUNCTION>
    <DECORATED>?TempInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>119</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>TempInsane</FUNCTION>
    <DECORATED>?TempInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>119</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>147</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>LongInsane</FUNCTION>
    <DECORATED>?LongInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>LongInsane</FUNCTION>
    <DECORATED>?LongInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>LongInsane</FUNCTION>
    <DECORATED>?LongInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>147</LINE>
      <COLUMN>91</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>LongInsane</FUNCTION>
    <DECORATED>?LongInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>LongInsane</FUNCTION>
    <DECORATED>?LongInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>rd.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>LongInsane</FUNCTION>
    <DECORATED>?LongInsane@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>storagebase.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StorageBase::StorageBase' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StorageBase::{ctor}</FUNCTION>
    <DECORATED>??0StorageBase@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>