<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'base64_chars''</FUNCTION>
    <DECORATED>??__Ebase64_chars@@YAXXZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'is_base64' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>is_base64</FUNCTION>
    <DECORATED>?is_base64@@YA_NE@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'bytes_to_encode' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'j' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_3' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>27</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_4' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*(bytes_to_encode++)'. 'bytes_to_encode' may have been invalidated at line 31 (lifetime.1).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>cqtools.cpp</FILENAME>
        <LINE>31</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_encode</FUNCTION>
    <DECORATED>?base64_encode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'j' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_4' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'char_array_3' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>96</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>105</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>96</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>cqtools.cpp</FILENAME>
      <LINE>105</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>base64_decode</FUNCTION>
    <DECORATED>?base64_decode@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>