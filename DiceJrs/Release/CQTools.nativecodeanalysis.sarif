{
  "version": "2.0.0",
  "$schema": "http://json.schemastore.org/sarif-2.0.0",
  "runs": [
    {
      "results": [
        {
          "ruleId": "26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 2
                }
              },
              "fullyQualifiedLogicalName": "void __cdecl `dynamic initializer for 'base64_chars''(void)"
            }
          ]
        },
        {
          "ruleId": "26440",
          "message": {
            "text": "Function 'is_base64' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 13
                }
              },
              "fullyQualifiedLogicalName": "bool __cdecl is_base64(unsigned char)"
            }
          ]
        },
        {
          "ruleId": "26429",
          "message": {
            "text": "Symbol 'bytes_to_encode' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7,
                  "endLine": 22,
                  "endColumn": 43
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26494",
          "message": {
            "text": "Variable 'j' is uninitialized. Always initialize an object (type.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6,
                  "endLine": 25,
                  "endColumn": 6
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26494",
          "message": {
            "text": "Variable 'char_array_3' is uninitialized. Always initialize an object (type.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 16,
                  "endLine": 26,
                  "endColumn": 16
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26494",
          "message": {
            "text": "Variable 'char_array_4' is uninitialized. Always initialize an object (type.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 16,
                  "endLine": 27,
                  "endColumn": 16
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 25,
                  "endLine": 40,
                  "endColumn": 39
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 40,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 4,
                  "endLine": 48,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 24,
                  "endLine": 56,
                  "endColumn": 38
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 11,
                  "endLine": 56,
                  "endColumn": 39
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26489",
          "message": {
            "text": "Don't dereference a pointer that may be invalid: '*(bytes_to_encode++)'. 'bytes_to_encode' may have been invalidated at line 31 (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 0,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                          },
                          "region": {
                            "startLine": 31,
                            "startColumn": 21
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 40,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 4,
                  "endLine": 48,
                  "endColumn": 22
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 11,
                  "endLine": 56,
                  "endColumn": 39
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_encode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26494",
          "message": {
            "text": "Variable 'j' is uninitialized. Always initialize an object (type.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 6,
                  "endLine": 69,
                  "endColumn": 6
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26494",
          "message": {
            "text": "Variable 'char_array_4' is uninitialized. Always initialize an object (type.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 16,
                  "endLine": 71,
                  "endColumn": 16
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26494",
          "message": {
            "text": "Variable 'char_array_3' is uninitialized. Always initialize an object (type.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 33,
                  "endLine": 71,
                  "endColumn": 33
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26472",
          "message": {
            "text": "Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 22,
                  "endLine": 74,
                  "endColumn": 40
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 63,
                  "endLine": 74,
                  "endColumn": 81
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 23,
                  "endLine": 76,
                  "endColumn": 41
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 3,
                  "endLine": 76,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 68,
                  "endLine": 81,
                  "endColumn": 82
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 5,
                  "endLine": 81,
                  "endColumn": 19
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 12,
                  "endLine": 88,
                  "endColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 4,
                  "endLine": 96,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 67,
                  "endLine": 99,
                  "endColumn": 81
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 4,
                  "endLine": 99,
                  "endColumn": 18
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 40,
                  "endLine": 105,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 3,
                  "endLine": 76,
                  "endColumn": 41
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 67
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 5,
                  "endLine": 88,
                  "endColumn": 26
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 4,
                  "endLine": 96,
                  "endColumn": 22
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 66
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 20
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        },
        {
          "ruleId": "26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 33,
                  "endLine": 105,
                  "endColumn": 54
                }
              },
              "fullyQualifiedLogicalName": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl base64_decode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"
            }
          ]
        }
      ],
      "tool": {
        "name": "PREfast",
        "fullName": "PREfast Code Analysis",
        "version": "14.20.27305.0",
        "fileVersion": "14.00.27305.00"
      },
      "invocations": [
        {
          "commandLine": "\"C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\bin\\HostX86\\x86\\c1xx.dll\" -ACf{1F7B090C-16DB-4822-966A-A93D26ED4681} -ACpmspft140.dll -Alint -D_PREFAST_ -D_AST_FE_ -Analyze -zm0x00392090 -il C:\\Users\\sb6ku\\AppData\\Local\\Temp\\_CL_11a9b6a3ast -typedil -f ..\\CQSDKCPP\\CQTools.cpp -Ze -D_MSC_EXTENSIONS -Zp8 -ZB64 -D_INTEGRAL_MAX_BITS=64 -Gs -pc \\:/ -D_MSC_VER=1920 -D_MSC_FULL_VER=192027305 -D_MSC_BUILD=0 -D_WIN32 -D_M_IX86=600 -D_M_IX86_FP=2 -GR -D_CPPRTTI -I C:\\Users\\sb6ku\\Desktop\\Jrs_Dev\\CQSDK -nologo -W 3 -diagnostics:column- -diagnostics:caret- -D_GUARDOVERFLOW_CRT_ALLOCATORS=1 -GF -Og -Oi -Ot -Oy -ltcg -DCODE_ANALYSIS -DWIN32 -DNDEBUG -DDICE_EXPORTS -D_WINDOWS -D_USRDLL -D_WINDLL -D_UNICODE -DUNICODE -EHs -D_CPPUNWIND -EHc -clrNoPureCRT -D_MT -GS -D_M_FP_PRECISE -permissive- -Zc:wchar_t -Zc:forScope -std:c++latest -FoRelease\\CQTools.obj -FdRelease\\vc142.pdb -Gd -analyze:quiet -analyze:plugin C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\bin\\HostX86\\x86\\EspXEngine.dll -FC -errorreport:prompt -analyze:ruleset C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\Rule Sets\\AllRules.ruleset -analyze:projectdirectory C:\\Users\\sb6ku\\Desktop\\Jrs_Dev\\DiceJrs -analyze:rulesetdirectory ;C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\\\Rule Sets -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\include -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.20.27305\\atlmfc\\include -I C:\\Program Files\\Microsoft Visual Studio\\2019\\Preview\\VC\\Auxiliary\\VS\\include -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\ucrt -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\um -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\shared -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\winrt -I C:\\Program Files\\Windows Kits\\10\\Include\\10.0.17763.0\\cppwinrt -I C:\\Program Files\\Windows Kits\\NETFXSDK\\4.7.2\\Include\\um -MPdiagMutex 0000000000000164"
        }
      ],
      "files": {
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_all.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqapi.cpp": {
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqapi.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqdefine.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqconstant.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqeve.cpp": {
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqevebasic.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqevemsg.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/bufstream.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeverequest.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqapi_ex.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_status.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_groupmsg.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_privatemsg.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqmsgsend.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_discussmsg.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/unpack.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_requestaddfriend.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_requestaddgroup.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqeve_friendadd.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdk/cqtools.h": {
          "roles": [
            "resultFile"
          ]
        },
        "file:///c:/users/sb6ku/desktop/jrs_dev/cqsdkcpp/cqtools.cpp": {
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        }
      },
      "logicalLocations": {},
      "resources": {
        "rules": {}
      }
    }
  ]
}