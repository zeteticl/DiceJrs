<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 2)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>GetRule::analyze</FUNCTION>
    <DECORATED>?analyze@GetRule@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>getrule.cpp</FILENAME>
        <LINE>26</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*&lt;begin&gt;$L0'. '&lt;begin&gt;$L0' may have been invalidated at line 30 (lifetime.1).</DESCRIPTION>
    <FUNCTION>GetRule::analyze</FUNCTION>
    <DECORATED>?analyze@GetRule@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>getrule.cpp</FILENAME>
        <LINE>30</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 3)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>GetRule::analyze</FUNCTION>
    <DECORATED>?analyze@GetRule@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>getrule.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 5)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>GetRule::analyze</FUNCTION>
    <DECORATED>?analyze@GetRule@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>getrule.cpp</FILENAME>
        <LINE>43</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>GetRule::get</FUNCTION>
    <DECORATED>?get@GetRule@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV23@@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>GetRule::get</FUNCTION>
    <DECORATED>?get@GetRule@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV23@@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>65</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>GetRule::get</FUNCTION>
    <DECORATED>?get@GetRule@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV23@@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>65</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>GetRule::get</FUNCTION>
    <DECORATED>?get@GetRule@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV23@@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '(temporary 13)' in call to 'std::operator==&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>GetRule::get</FUNCTION>
    <DECORATED>?get@GetRule@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV23@@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>getrule.cpp</FILENAME>
        <LINE>71</LINE>
        <COLUMN>46</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
      <FILENAME>getrule.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 '(temporary 14)' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::operator=' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>GetRule::get</FUNCTION>
    <DECORATED>?get@GetRule@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV23@@Z</DECORATED>
    <FUNCLINE>51</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\dicejrs</FILEPATH>
        <FILENAME>getrule.cpp</FILENAME>
        <LINE>73</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
</DEFECTS>