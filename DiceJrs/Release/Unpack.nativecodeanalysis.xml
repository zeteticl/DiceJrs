<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'p' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>show</FUNCTION>
    <DECORATED>?show@@YAXPAXH@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>show</FUNCTION>
    <DECORATED>?show@@YAXPAXH@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'p' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>show</FUNCTION>
    <DECORATED>?show@@YAXPAXH@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'str' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Flip' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Flip</FUNCTION>
    <DECORATED>?Flip@@YAPAEQAEH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::setData</FUNCTION>
    <DECORATED>?setData@Unpack@@QAEAAV1@PBDH@Z</DECORATED>
    <FUNCLINE>46</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdk</FILEPATH>
      <FILENAME>unpack.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Unpack::{ctor}</FUNCTION>
    <DECORATED>??0Unpack@@QAE@XZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Unpack::clear' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Unpack::clear</FUNCTION>
    <DECORATED>?clear@Unpack@@QAEAAV1@XZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Unpack::len' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Unpack::len</FUNCTION>
    <DECORATED>?len@Unpack@@QBEHXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@H@Z</DECORATED>
    <FUNCLINE>80</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>92</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getInt</FUNCTION>
    <DECORATED>?getInt@Unpack@@QAEHXZ</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>92</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getInt</FUNCTION>
    <DECORATED>?getInt@Unpack@@QAEHXZ</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>100</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@_J@Z</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getLong</FUNCTION>
    <DECORATED>?getLong@Unpack@@QAE_JXZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getLong</FUNCTION>
    <DECORATED>?getLong@Unpack@@QAE_JXZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@F@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getshort</FUNCTION>
    <DECORATED>?getshort@Unpack@@QAEFXZ</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getshort</FUNCTION>
    <DECORATED>?getshort@Unpack@@QAEFXZ</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@PBEF@Z</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>163</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>163</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'allotemp.2'. '(temporary 2)' may have been invalidated at line 156 (lifetime.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>156</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>165</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'allotemp.4'. '(temporary 4)' may have been invalidated at line 165 (lifetime.1).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(151's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>156</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>165</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(151's result)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>Unpack::add</FUNCTION>
    <DECORATED>?add@Unpack@@QAEAAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
        <FILENAME>unpack.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>Unpack::getstring</FUNCTION>
    <DECORATED>?getstring@Unpack@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Unpack::getstring</FUNCTION>
    <DECORATED>?getstring@Unpack@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>toBin</FUNCTION>
    <DECORATED>??$toBin@H@@YAPAEAAH@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>toBin</FUNCTION>
    <DECORATED>??$toBin@_J@@YAPAEAA_J@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\sb6ku\desktop\jrs_dev\cqsdkcpp</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>toBin</FUNCTION>
    <DECORATED>??$toBin@F@@YAPAEAAF@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>